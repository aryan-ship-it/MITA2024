{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMPVCAGctZcIiN+MSE3G6Hx"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QBNKRUVy6aMP","executionInfo":{"status":"ok","timestamp":1718134539622,"user_tz":300,"elapsed":983,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"51d02780-4d80-4804-f6d0-a12cbb940bef"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-Nx2cZIx1j-8"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import torchvision.datasets as datasets\n","import torchvision.transforms as transforms\n","from torch import nn, optim\n","import torch.nn.functional as F\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler, MinMaxScaler\n","from torch.utils.data import DataLoader, TensorDataset\n","import matplotlib.pyplot as plt\n"]},{"cell_type":"code","source":["transform = transforms.Compose([\n","    transforms.ToTensor()\n","])"],"metadata":{"id":"X6RlD4qJQCsQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["device = 'cuda' if torch.cuda.is_available() else 'cpu'\n"],"metadata":{"id":"088ztmMf6qG7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_df = pd.read_pickle('/content/drive/MyDrive/Colab Notebooks/RTIOT/Datasets/RTIOT_train_2labels.pkl')\n","test_df = pd.read_pickle('/content/drive/MyDrive/Colab Notebooks/RTIOT/Datasets/RTIOT_test_2labels.pkl')"],"metadata":{"id":"CpAIiLXW6uTR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_df = train_df.drop(['proto'], axis=1)\n","train_df = train_df.drop(['service'], axis=1)\n","train_df = train_df.drop(['id.orig_p'], axis =1)\n","train_df = train_df.drop(['id.resp_p'], axis =1)\n","test_df = test_df.drop(['proto'], axis=1)\n","test_df = test_df.drop(['service'], axis=1)\n","test_df = test_df.drop(['id.orig_p'], axis =1)\n","test_df = test_df.drop(['id.resp_p'], axis =1)\n","\n","\n"],"metadata":{"id":"tpg8db2D6xjF"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_df = train_df.reset_index(drop=True)\n","train_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"-7VDZGtW6yVP","executionInfo":{"status":"ok","timestamp":1718134540377,"user_tz":300,"elapsed":189,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"19d26ce3-ba77-404d-b4cf-8692f2665a37"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0          20.020917            10             6                  3   \n","1           0.000005             1             1                  1   \n","2           0.000003             1             1                  1   \n","3           0.000001             1             1                  1   \n","4           0.001379             1             1                  1   \n","...              ...           ...           ...                ...   \n","98488       0.000002             1             1                  1   \n","98489       0.000004             1             1                  1   \n","98490       0.000002             1             1                  1   \n","98491       0.000001             1             1                  1   \n","98492       0.000255             1             1                  1   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      4      4.994780e-01      2.996870e-01   \n","1                      0      1.997288e+05      1.997288e+05   \n","2                      0      3.495253e+05      3.495253e+05   \n","3                      0      1.048576e+06      1.048576e+06   \n","4                      1      7.251563e+02      7.251563e+02   \n","...                  ...               ...               ...   \n","98488                  0      5.242880e+05      5.242880e+05   \n","98489                  0      2.467238e+05      2.467238e+05   \n","98490                  0      4.660338e+05      4.660338e+05   \n","98491                  0      1.048576e+06      1.048576e+06   \n","98492                  1      3.919910e+03      3.919910e+03   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  \\\n","0           7.991640e-01            0.6                  328  ...   \n","1           3.994575e+05            1.0                   20  ...   \n","2           6.990507e+05            1.0                   20  ...   \n","3           2.097152e+06            1.0                   20  ...   \n","4           1.450313e+03            1.0                    8  ...   \n","...                  ...            ...                  ...  ...   \n","98488       1.048576e+06            1.0                   20  ...   \n","98489       4.934475e+05            1.0                   20  ...   \n","98490       9.320676e+05            1.0                   20  ...   \n","98491       2.097152e+06            1.0                   20  ...   \n","98492       7.839821e+03            1.0                    8  ...   \n","\n","          idle.min     idle.max     idle.tot     idle.avg  idle.std  \\\n","0      17725537.06  17725537.06  17725537.06  17725537.06       0.0   \n","1             0.00         0.00         0.00         0.00       0.0   \n","2             0.00         0.00         0.00         0.00       0.0   \n","3             0.00         0.00         0.00         0.00       0.0   \n","4             0.00         0.00         0.00         0.00       0.0   \n","...            ...          ...          ...          ...       ...   \n","98488         0.00         0.00         0.00         0.00       0.0   \n","98489         0.00         0.00         0.00         0.00       0.0   \n","98490         0.00         0.00         0.00         0.00       0.0   \n","98491         0.00         0.00         0.00         0.00       0.0   \n","98492         0.00         0.00         0.00         0.00       0.0   \n","\n","       fwd_init_window_size  bwd_init_window_size  fwd_last_window_size  \\\n","0                     64240                 26847                   502   \n","1                        64                     0                    64   \n","2                        64                     0                    64   \n","3                        64                     0                    64   \n","4                         0                     0                     0   \n","...                     ...                   ...                   ...   \n","98488                    64                     0                    64   \n","98489                    64                     0                    64   \n","98490                    64                     0                    64   \n","98491                    64                     0                    64   \n","98492                     0                     0                     0   \n","\n","       is_Attack  is_Normal  \n","0          False       True  \n","1           True      False  \n","2           True      False  \n","3           True      False  \n","4           True      False  \n","...          ...        ...  \n","98488       True      False  \n","98489       True      False  \n","98490       True      False  \n","98491       True      False  \n","98492       True      False  \n","\n","[98493 rows x 81 columns]"],"text/html":["\n","  <div id=\"df-80c4acbe-8c9c-4a56-b3a7-de433c0cbec9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","      <th>is_Attack</th>\n","      <th>is_Normal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20.020917</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>4.994780e-01</td>\n","      <td>2.996870e-01</td>\n","      <td>7.991640e-01</td>\n","      <td>0.6</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.000005</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.997288e+05</td>\n","      <td>1.997288e+05</td>\n","      <td>3.994575e+05</td>\n","      <td>1.0</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000003</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3.495253e+05</td>\n","      <td>3.495253e+05</td>\n","      <td>6.990507e+05</td>\n","      <td>1.0</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.048576e+06</td>\n","      <td>1.048576e+06</td>\n","      <td>2.097152e+06</td>\n","      <td>1.0</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.001379</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>7.251563e+02</td>\n","      <td>7.251563e+02</td>\n","      <td>1.450313e+03</td>\n","      <td>1.0</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>98488</th>\n","      <td>0.000002</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>5.242880e+05</td>\n","      <td>5.242880e+05</td>\n","      <td>1.048576e+06</td>\n","      <td>1.0</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>98489</th>\n","      <td>0.000004</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.467238e+05</td>\n","      <td>2.467238e+05</td>\n","      <td>4.934475e+05</td>\n","      <td>1.0</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>98490</th>\n","      <td>0.000002</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4.660338e+05</td>\n","      <td>4.660338e+05</td>\n","      <td>9.320676e+05</td>\n","      <td>1.0</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>98491</th>\n","      <td>0.000001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.048576e+06</td>\n","      <td>1.048576e+06</td>\n","      <td>2.097152e+06</td>\n","      <td>1.0</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>98492</th>\n","      <td>0.000255</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3.919910e+03</td>\n","      <td>3.919910e+03</td>\n","      <td>7.839821e+03</td>\n","      <td>1.0</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>98493 rows × 81 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80c4acbe-8c9c-4a56-b3a7-de433c0cbec9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-80c4acbe-8c9c-4a56-b3a7-de433c0cbec9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-80c4acbe-8c9c-4a56-b3a7-de433c0cbec9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-250e06db-58fc-494a-b3d9-9507437f6bc7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-250e06db-58fc-494a-b3d9-9507437f6bc7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-250e06db-58fc-494a-b3d9-9507437f6bc7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_d079e83a-edbe-4d00-a969-15a969744d16\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('train_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_d079e83a-edbe-4d00-a969-15a969744d16 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('train_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_df"}},"metadata":{},"execution_count":98}]},{"cell_type":"code","source":["test_df = test_df.reset_index(drop=True)\n","test_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"tOuL43y1671P","executionInfo":{"status":"ok","timestamp":1718134540377,"user_tz":300,"elapsed":7,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"c5ab1140-5491-40e4-8693-d3e3742229ea"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0           0.027133             2             2                  2   \n","1         100.475928            10             0                 10   \n","2           0.000315             2             2                  2   \n","3           0.000004             1             1                  1   \n","4           0.000001             1             1                  1   \n","...              ...           ...           ...                ...   \n","24619       0.000002             1             1                  1   \n","24620       0.000004             1             1                  1   \n","24621       0.000001             1             1                  1   \n","24622       0.000005             1             1                  1   \n","24623      20.054275            13            14                  7   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      2      7.371101e+01      7.371101e+01   \n","1                      0      9.952600e-02      0.000000e+00   \n","2                      2      6.350195e+03      6.350195e+03   \n","3                      0      2.467238e+05      2.467238e+05   \n","4                      0      1.048576e+06      1.048576e+06   \n","...                  ...               ...               ...   \n","24619                  0      4.660338e+05      4.660338e+05   \n","24620                  0      2.467238e+05      2.467238e+05   \n","24621                  0      1.048576e+06      1.048576e+06   \n","24622                  0      1.997288e+05      1.997288e+05   \n","24623                  6      6.482410e-01      6.981060e-01   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  \\\n","0           1.474220e+02       1.000000                   16  ...   \n","1           9.952600e-02       0.000000                   80  ...   \n","2           1.270039e+04       1.000000                   16  ...   \n","3           4.934475e+05       1.000000                   20  ...   \n","4           2.097152e+06       1.000000                   20  ...   \n","...                  ...            ...                  ...  ...   \n","24619       9.320676e+05       1.000000                   20  ...   \n","24620       4.934475e+05       1.000000                   20  ...   \n","24621       2.097152e+06       1.000000                   20  ...   \n","24622       3.994575e+05       1.000000                   20  ...   \n","24623       1.346346e+00       1.076923                  424  ...   \n","\n","           idle.min     idle.max     idle.tot     idle.avg      idle.std  \\\n","0      0.000000e+00         0.00         0.00         0.00  0.000000e+00   \n","1      9.040719e+06  35599052.91  93022574.90  23255643.73  1.184459e+07   \n","2      0.000000e+00         0.00         0.00         0.00  0.000000e+00   \n","3      0.000000e+00         0.00         0.00         0.00  0.000000e+00   \n","4      0.000000e+00         0.00         0.00         0.00  0.000000e+00   \n","...             ...          ...          ...          ...           ...   \n","24619  0.000000e+00         0.00         0.00         0.00  0.000000e+00   \n","24620  0.000000e+00         0.00         0.00         0.00  0.000000e+00   \n","24621  0.000000e+00         0.00         0.00         0.00  0.000000e+00   \n","24622  0.000000e+00         0.00         0.00         0.00  0.000000e+00   \n","24623  1.980470e+07  19804703.95  19804703.95  19804703.95  0.000000e+00   \n","\n","       fwd_init_window_size  bwd_init_window_size  fwd_last_window_size  \\\n","0                         0                     0                     0   \n","1                         0                     0                     0   \n","2                         0                     0                     0   \n","3                        64                     0                    64   \n","4                        64                     0                    64   \n","...                     ...                   ...                   ...   \n","24619                    64                     0                    64   \n","24620                    64                     0                    64   \n","24621                    64                     0                    64   \n","24622                    64                     0                    64   \n","24623                 64240                 65160                   501   \n","\n","       is_Attack  is_Normal  \n","0          False       True  \n","1           True      False  \n","2           True      False  \n","3           True      False  \n","4           True      False  \n","...          ...        ...  \n","24619       True      False  \n","24620       True      False  \n","24621       True      False  \n","24622       True      False  \n","24623       True      False  \n","\n","[24624 rows x 81 columns]"],"text/html":["\n","  <div id=\"df-2c445279-5e8c-4431-acde-d51677065277\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","      <th>is_Attack</th>\n","      <th>is_Normal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.027133</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>7.371101e+01</td>\n","      <td>7.371101e+01</td>\n","      <td>1.474220e+02</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>100.475928</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>9.952600e-02</td>\n","      <td>0.000000e+00</td>\n","      <td>9.952600e-02</td>\n","      <td>0.000000</td>\n","      <td>80</td>\n","      <td>...</td>\n","      <td>9.040719e+06</td>\n","      <td>35599052.91</td>\n","      <td>93022574.90</td>\n","      <td>23255643.73</td>\n","      <td>1.184459e+07</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000315</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>6.350195e+03</td>\n","      <td>6.350195e+03</td>\n","      <td>1.270039e+04</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000004</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.467238e+05</td>\n","      <td>2.467238e+05</td>\n","      <td>4.934475e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.000001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.048576e+06</td>\n","      <td>1.048576e+06</td>\n","      <td>2.097152e+06</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24619</th>\n","      <td>0.000002</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4.660338e+05</td>\n","      <td>4.660338e+05</td>\n","      <td>9.320676e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>24620</th>\n","      <td>0.000004</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.467238e+05</td>\n","      <td>2.467238e+05</td>\n","      <td>4.934475e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>24621</th>\n","      <td>0.000001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.048576e+06</td>\n","      <td>1.048576e+06</td>\n","      <td>2.097152e+06</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>24622</th>\n","      <td>0.000005</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.997288e+05</td>\n","      <td>1.997288e+05</td>\n","      <td>3.994575e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>24623</th>\n","      <td>20.054275</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>6.482410e-01</td>\n","      <td>6.981060e-01</td>\n","      <td>1.346346e+00</td>\n","      <td>1.076923</td>\n","      <td>424</td>\n","      <td>...</td>\n","      <td>1.980470e+07</td>\n","      <td>19804703.95</td>\n","      <td>19804703.95</td>\n","      <td>19804703.95</td>\n","      <td>0.000000e+00</td>\n","      <td>64240</td>\n","      <td>65160</td>\n","      <td>501</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>24624 rows × 81 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2c445279-5e8c-4431-acde-d51677065277')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2c445279-5e8c-4431-acde-d51677065277 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2c445279-5e8c-4431-acde-d51677065277');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f623be7e-cd31-4c35-97ad-b015ebbd00ce\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f623be7e-cd31-4c35-97ad-b015ebbd00ce')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f623be7e-cd31-4c35-97ad-b015ebbd00ce button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5c48b2df-1294-4605-99d4-6abe398491c3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5c48b2df-1294-4605-99d4-6abe398491c3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_df"}},"metadata":{},"execution_count":99}]},{"cell_type":"code","source":["train_normal_data = train_df[train_df['is_Normal'] == True]\n","train_normal_data = train_normal_data.drop('is_Attack', axis=1)\n","train_normal_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"yH85259b69YC","executionInfo":{"status":"ok","timestamp":1718134540561,"user_tz":300,"elapsed":190,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"6030864b-e59b-4762-b245-f3560b5c5dd2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0          20.020917            10             6                  3   \n","6          45.072381            10             6                  3   \n","9           0.745822             7             5                  2   \n","25          1.211034            14            10                  3   \n","29          1.613707            15            12                  3   \n","...              ...           ...           ...                ...   \n","98436      62.108146            10             6                  3   \n","98450       0.027695             2             2                  2   \n","98462       1.522084            14            12                  3   \n","98473       0.939876             7             5                  2   \n","98487      26.949339             9             5                  3   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      4          0.499478          0.299687   \n","6                      4          0.221865          0.133119   \n","9                      1          9.385618          6.704013   \n","25                     8         11.560369          8.257406   \n","29                     9          9.295367          7.436294   \n","...                  ...               ...               ...   \n","98436                  4          0.161009          0.096606   \n","98450                  2         72.215356         72.215356   \n","98462                  9          9.197916          7.883928   \n","98473                  1          7.447790          5.319850   \n","98487                  3          0.333960          0.185533   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  active.std  \\\n","0               0.799164       0.600000                  328  ...         0.0   \n","6               0.354985       0.600000                  328  ...         0.0   \n","9              16.089631       0.714286                  232  ...         0.0   \n","25             19.817775       0.714286                  444  ...         0.0   \n","29             16.731661       0.800000                  464  ...         0.0   \n","...                  ...            ...                  ...  ...         ...   \n","98436           0.257615       0.600000                  328  ...         0.0   \n","98450         144.430713       1.000000                   16  ...         0.0   \n","98462          17.081843       0.857143                  432  ...         0.0   \n","98473          12.767641       0.714286                  232  ...         0.0   \n","98487           0.519493       0.555556                  296  ...         0.0   \n","\n","          idle.min     idle.max     idle.tot     idle.avg  idle.std  \\\n","0      17725537.06  17725537.06  17725537.06  17725537.06       0.0   \n","6      42789963.96  42789963.96  42789963.96  42789963.96       0.0   \n","9             0.00         0.00         0.00         0.00       0.0   \n","25            0.00         0.00         0.00         0.00       0.0   \n","29            0.00         0.00         0.00         0.00       0.0   \n","...            ...          ...          ...          ...       ...   \n","98436  59805906.06  59805906.06  59805906.06  59805906.06       0.0   \n","98450         0.00         0.00         0.00         0.00       0.0   \n","98462         0.00         0.00         0.00         0.00       0.0   \n","98473         0.00         0.00         0.00         0.00       0.0   \n","98487  24862733.13  24862733.13  24862733.13  24862733.13       0.0   \n","\n","       fwd_init_window_size  bwd_init_window_size  fwd_last_window_size  \\\n","0                     64240                 26847                   502   \n","6                     64240                 26847                   502   \n","9                     64240                 26847                   501   \n","25                    64240                 26847                     0   \n","29                    64240                 26847                     0   \n","...                     ...                   ...                   ...   \n","98436                 64240                 26847                   502   \n","98450                     0                     0                     0   \n","98462                 64240                 26847                     0   \n","98473                 64240                 26847                   501   \n","98487                 64240                 26847                   502   \n","\n","       is_Normal  \n","0           True  \n","6           True  \n","9           True  \n","25          True  \n","29          True  \n","...          ...  \n","98436       True  \n","98450       True  \n","98462       True  \n","98473       True  \n","98487       True  \n","\n","[10005 rows x 80 columns]"],"text/html":["\n","  <div id=\"df-922ef766-fa2e-47ff-b041-8fe9f1b128e9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>active.std</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","      <th>is_Normal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20.020917</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.499478</td>\n","      <td>0.299687</td>\n","      <td>0.799164</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>45.072381</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.221865</td>\n","      <td>0.133119</td>\n","      <td>0.354985</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>42789963.96</td>\n","      <td>42789963.96</td>\n","      <td>42789963.96</td>\n","      <td>42789963.96</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.745822</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>9.385618</td>\n","      <td>6.704013</td>\n","      <td>16.089631</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>1.211034</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>11.560369</td>\n","      <td>8.257406</td>\n","      <td>19.817775</td>\n","      <td>0.714286</td>\n","      <td>444</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>1.613707</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9.295367</td>\n","      <td>7.436294</td>\n","      <td>16.731661</td>\n","      <td>0.800000</td>\n","      <td>464</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>98436</th>\n","      <td>62.108146</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.161009</td>\n","      <td>0.096606</td>\n","      <td>0.257615</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>59805906.06</td>\n","      <td>59805906.06</td>\n","      <td>59805906.06</td>\n","      <td>59805906.06</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>98450</th>\n","      <td>0.027695</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>72.215356</td>\n","      <td>72.215356</td>\n","      <td>144.430713</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>98462</th>\n","      <td>1.522084</td>\n","      <td>14</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9.197916</td>\n","      <td>7.883928</td>\n","      <td>17.081843</td>\n","      <td>0.857143</td>\n","      <td>432</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>98473</th>\n","      <td>0.939876</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>7.447790</td>\n","      <td>5.319850</td>\n","      <td>12.767641</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>98487</th>\n","      <td>26.949339</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0.333960</td>\n","      <td>0.185533</td>\n","      <td>0.519493</td>\n","      <td>0.555556</td>\n","      <td>296</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>24862733.13</td>\n","      <td>24862733.13</td>\n","      <td>24862733.13</td>\n","      <td>24862733.13</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10005 rows × 80 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-922ef766-fa2e-47ff-b041-8fe9f1b128e9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-922ef766-fa2e-47ff-b041-8fe9f1b128e9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-922ef766-fa2e-47ff-b041-8fe9f1b128e9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d49e9543-de37-42f0-a02e-ef8ee6db2928\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d49e9543-de37-42f0-a02e-ef8ee6db2928')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d49e9543-de37-42f0-a02e-ef8ee6db2928 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ccb599e8-a9f5-469e-8935-813820d419eb\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('train_normal_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ccb599e8-a9f5-469e-8935-813820d419eb button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('train_normal_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"train_normal_data"}},"metadata":{},"execution_count":100}]},{"cell_type":"code","source":["train_normal_data.to_pickle(\"/content/drive/MyDrive/Colab Notebooks/MITA 2024/HIKARI 2021/Datasets/train_normal.pkl\")"],"metadata":{"id":"vt6cH_Yo6-w9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train = pd.read_pickle(\"/content/drive/MyDrive/Colab Notebooks/MITA 2024/HIKARI 2021/Datasets/train_normal.pkl\")\n","X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"qXq6eON57BZo","executionInfo":{"status":"ok","timestamp":1718134540561,"user_tz":300,"elapsed":9,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"080a667f-da66-4847-f1ca-881ec2683ef8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0          20.020917            10             6                  3   \n","6          45.072381            10             6                  3   \n","9           0.745822             7             5                  2   \n","25          1.211034            14            10                  3   \n","29          1.613707            15            12                  3   \n","...              ...           ...           ...                ...   \n","98436      62.108146            10             6                  3   \n","98450       0.027695             2             2                  2   \n","98462       1.522084            14            12                  3   \n","98473       0.939876             7             5                  2   \n","98487      26.949339             9             5                  3   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      4          0.499478          0.299687   \n","6                      4          0.221865          0.133119   \n","9                      1          9.385618          6.704013   \n","25                     8         11.560369          8.257406   \n","29                     9          9.295367          7.436294   \n","...                  ...               ...               ...   \n","98436                  4          0.161009          0.096606   \n","98450                  2         72.215356         72.215356   \n","98462                  9          9.197916          7.883928   \n","98473                  1          7.447790          5.319850   \n","98487                  3          0.333960          0.185533   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  active.std  \\\n","0               0.799164       0.600000                  328  ...         0.0   \n","6               0.354985       0.600000                  328  ...         0.0   \n","9              16.089631       0.714286                  232  ...         0.0   \n","25             19.817775       0.714286                  444  ...         0.0   \n","29             16.731661       0.800000                  464  ...         0.0   \n","...                  ...            ...                  ...  ...         ...   \n","98436           0.257615       0.600000                  328  ...         0.0   \n","98450         144.430713       1.000000                   16  ...         0.0   \n","98462          17.081843       0.857143                  432  ...         0.0   \n","98473          12.767641       0.714286                  232  ...         0.0   \n","98487           0.519493       0.555556                  296  ...         0.0   \n","\n","          idle.min     idle.max     idle.tot     idle.avg  idle.std  \\\n","0      17725537.06  17725537.06  17725537.06  17725537.06       0.0   \n","6      42789963.96  42789963.96  42789963.96  42789963.96       0.0   \n","9             0.00         0.00         0.00         0.00       0.0   \n","25            0.00         0.00         0.00         0.00       0.0   \n","29            0.00         0.00         0.00         0.00       0.0   \n","...            ...          ...          ...          ...       ...   \n","98436  59805906.06  59805906.06  59805906.06  59805906.06       0.0   \n","98450         0.00         0.00         0.00         0.00       0.0   \n","98462         0.00         0.00         0.00         0.00       0.0   \n","98473         0.00         0.00         0.00         0.00       0.0   \n","98487  24862733.13  24862733.13  24862733.13  24862733.13       0.0   \n","\n","       fwd_init_window_size  bwd_init_window_size  fwd_last_window_size  \\\n","0                     64240                 26847                   502   \n","6                     64240                 26847                   502   \n","9                     64240                 26847                   501   \n","25                    64240                 26847                     0   \n","29                    64240                 26847                     0   \n","...                     ...                   ...                   ...   \n","98436                 64240                 26847                   502   \n","98450                     0                     0                     0   \n","98462                 64240                 26847                     0   \n","98473                 64240                 26847                   501   \n","98487                 64240                 26847                   502   \n","\n","       is_Normal  \n","0           True  \n","6           True  \n","9           True  \n","25          True  \n","29          True  \n","...          ...  \n","98436       True  \n","98450       True  \n","98462       True  \n","98473       True  \n","98487       True  \n","\n","[10005 rows x 80 columns]"],"text/html":["\n","  <div id=\"df-a73923ed-18c6-421b-9201-992f1b72de65\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>active.std</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","      <th>is_Normal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20.020917</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.499478</td>\n","      <td>0.299687</td>\n","      <td>0.799164</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>45.072381</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.221865</td>\n","      <td>0.133119</td>\n","      <td>0.354985</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>42789963.96</td>\n","      <td>42789963.96</td>\n","      <td>42789963.96</td>\n","      <td>42789963.96</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.745822</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>9.385618</td>\n","      <td>6.704013</td>\n","      <td>16.089631</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>1.211034</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>11.560369</td>\n","      <td>8.257406</td>\n","      <td>19.817775</td>\n","      <td>0.714286</td>\n","      <td>444</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>1.613707</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9.295367</td>\n","      <td>7.436294</td>\n","      <td>16.731661</td>\n","      <td>0.800000</td>\n","      <td>464</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>98436</th>\n","      <td>62.108146</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.161009</td>\n","      <td>0.096606</td>\n","      <td>0.257615</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>59805906.06</td>\n","      <td>59805906.06</td>\n","      <td>59805906.06</td>\n","      <td>59805906.06</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>98450</th>\n","      <td>0.027695</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>72.215356</td>\n","      <td>72.215356</td>\n","      <td>144.430713</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>98462</th>\n","      <td>1.522084</td>\n","      <td>14</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9.197916</td>\n","      <td>7.883928</td>\n","      <td>17.081843</td>\n","      <td>0.857143</td>\n","      <td>432</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>98473</th>\n","      <td>0.939876</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>7.447790</td>\n","      <td>5.319850</td>\n","      <td>12.767641</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>98487</th>\n","      <td>26.949339</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0.333960</td>\n","      <td>0.185533</td>\n","      <td>0.519493</td>\n","      <td>0.555556</td>\n","      <td>296</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>24862733.13</td>\n","      <td>24862733.13</td>\n","      <td>24862733.13</td>\n","      <td>24862733.13</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10005 rows × 80 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a73923ed-18c6-421b-9201-992f1b72de65')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a73923ed-18c6-421b-9201-992f1b72de65 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a73923ed-18c6-421b-9201-992f1b72de65');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3578d3a5-9e2d-4173-b966-abc314d46387\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3578d3a5-9e2d-4173-b966-abc314d46387')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3578d3a5-9e2d-4173-b966-abc314d46387 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_bd99bd4e-44dc-495e-ab84-7c0d4d26461b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_bd99bd4e-44dc-495e-ab84-7c0d4d26461b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train"}},"metadata":{},"execution_count":102}]},{"cell_type":"code","source":["X_train = X_train.drop('is_Normal', axis=1)\n","X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"QdqUBrooL0h-","executionInfo":{"status":"ok","timestamp":1718134540561,"user_tz":300,"elapsed":8,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"377beab2-3501-462e-ef90-afe945bc1add"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0          20.020917            10             6                  3   \n","6          45.072381            10             6                  3   \n","9           0.745822             7             5                  2   \n","25          1.211034            14            10                  3   \n","29          1.613707            15            12                  3   \n","...              ...           ...           ...                ...   \n","98436      62.108146            10             6                  3   \n","98450       0.027695             2             2                  2   \n","98462       1.522084            14            12                  3   \n","98473       0.939876             7             5                  2   \n","98487      26.949339             9             5                  3   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      4          0.499478          0.299687   \n","6                      4          0.221865          0.133119   \n","9                      1          9.385618          6.704013   \n","25                     8         11.560369          8.257406   \n","29                     9          9.295367          7.436294   \n","...                  ...               ...               ...   \n","98436                  4          0.161009          0.096606   \n","98450                  2         72.215356         72.215356   \n","98462                  9          9.197916          7.883928   \n","98473                  1          7.447790          5.319850   \n","98487                  3          0.333960          0.185533   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  \\\n","0               0.799164       0.600000                  328  ...   \n","6               0.354985       0.600000                  328  ...   \n","9              16.089631       0.714286                  232  ...   \n","25             19.817775       0.714286                  444  ...   \n","29             16.731661       0.800000                  464  ...   \n","...                  ...            ...                  ...  ...   \n","98436           0.257615       0.600000                  328  ...   \n","98450         144.430713       1.000000                   16  ...   \n","98462          17.081843       0.857143                  432  ...   \n","98473          12.767641       0.714286                  232  ...   \n","98487           0.519493       0.555556                  296  ...   \n","\n","         active.avg  active.std     idle.min     idle.max     idle.tot  \\\n","0      2.295380e+06         0.0  17725537.06  17725537.06  17725537.06   \n","6      2.282417e+06         0.0  42789963.96  42789963.96  42789963.96   \n","9      7.476079e+05         0.0         0.00         0.00         0.00   \n","25     1.211034e+06         0.0         0.00         0.00         0.00   \n","29     1.616026e+06         0.0         0.00         0.00         0.00   \n","...             ...         ...          ...          ...          ...   \n","98436  2.302240e+06         0.0  59805906.06  59805906.06  59805906.06   \n","98450  2.769494e+04         0.0         0.00         0.00         0.00   \n","98462  1.524231e+06         0.0         0.00         0.00         0.00   \n","98473  9.417629e+05         0.0         0.00         0.00         0.00   \n","98487  2.086606e+06         0.0  24862733.13  24862733.13  24862733.13   \n","\n","          idle.avg  idle.std  fwd_init_window_size  bwd_init_window_size  \\\n","0      17725537.06       0.0                 64240                 26847   \n","6      42789963.96       0.0                 64240                 26847   \n","9             0.00       0.0                 64240                 26847   \n","25            0.00       0.0                 64240                 26847   \n","29            0.00       0.0                 64240                 26847   \n","...            ...       ...                   ...                   ...   \n","98436  59805906.06       0.0                 64240                 26847   \n","98450         0.00       0.0                     0                     0   \n","98462         0.00       0.0                 64240                 26847   \n","98473         0.00       0.0                 64240                 26847   \n","98487  24862733.13       0.0                 64240                 26847   \n","\n","       fwd_last_window_size  \n","0                       502  \n","6                       502  \n","9                       501  \n","25                        0  \n","29                        0  \n","...                     ...  \n","98436                   502  \n","98450                     0  \n","98462                     0  \n","98473                   501  \n","98487                   502  \n","\n","[10005 rows x 79 columns]"],"text/html":["\n","  <div id=\"df-9c4117f8-3247-4f81-bfe6-eea6172ef0f2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>active.avg</th>\n","      <th>active.std</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20.020917</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.499478</td>\n","      <td>0.299687</td>\n","      <td>0.799164</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>2.295380e+06</td>\n","      <td>0.0</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>17725537.06</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>45.072381</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.221865</td>\n","      <td>0.133119</td>\n","      <td>0.354985</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>2.282417e+06</td>\n","      <td>0.0</td>\n","      <td>42789963.96</td>\n","      <td>42789963.96</td>\n","      <td>42789963.96</td>\n","      <td>42789963.96</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0.745822</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>9.385618</td>\n","      <td>6.704013</td>\n","      <td>16.089631</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>7.476079e+05</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>1.211034</td>\n","      <td>14</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>11.560369</td>\n","      <td>8.257406</td>\n","      <td>19.817775</td>\n","      <td>0.714286</td>\n","      <td>444</td>\n","      <td>...</td>\n","      <td>1.211034e+06</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>1.613707</td>\n","      <td>15</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9.295367</td>\n","      <td>7.436294</td>\n","      <td>16.731661</td>\n","      <td>0.800000</td>\n","      <td>464</td>\n","      <td>...</td>\n","      <td>1.616026e+06</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>98436</th>\n","      <td>62.108146</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.161009</td>\n","      <td>0.096606</td>\n","      <td>0.257615</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>2.302240e+06</td>\n","      <td>0.0</td>\n","      <td>59805906.06</td>\n","      <td>59805906.06</td>\n","      <td>59805906.06</td>\n","      <td>59805906.06</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","    </tr>\n","    <tr>\n","      <th>98450</th>\n","      <td>0.027695</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>72.215356</td>\n","      <td>72.215356</td>\n","      <td>144.430713</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>2.769494e+04</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>98462</th>\n","      <td>1.522084</td>\n","      <td>14</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>9.197916</td>\n","      <td>7.883928</td>\n","      <td>17.081843</td>\n","      <td>0.857143</td>\n","      <td>432</td>\n","      <td>...</td>\n","      <td>1.524231e+06</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>98473</th>\n","      <td>0.939876</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>7.447790</td>\n","      <td>5.319850</td>\n","      <td>12.767641</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>9.417629e+05</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","    </tr>\n","    <tr>\n","      <th>98487</th>\n","      <td>26.949339</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0.333960</td>\n","      <td>0.185533</td>\n","      <td>0.519493</td>\n","      <td>0.555556</td>\n","      <td>296</td>\n","      <td>...</td>\n","      <td>2.086606e+06</td>\n","      <td>0.0</td>\n","      <td>24862733.13</td>\n","      <td>24862733.13</td>\n","      <td>24862733.13</td>\n","      <td>24862733.13</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10005 rows × 79 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c4117f8-3247-4f81-bfe6-eea6172ef0f2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9c4117f8-3247-4f81-bfe6-eea6172ef0f2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9c4117f8-3247-4f81-bfe6-eea6172ef0f2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4dd244ec-deb5-457e-b76c-8e706650549d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4dd244ec-deb5-457e-b76c-8e706650549d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4dd244ec-deb5-457e-b76c-8e706650549d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f3608bf0-6325-46b7-86ab-5f3145535a71\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_train')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f3608bf0-6325-46b7-86ab-5f3145535a71 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_train');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_train"}},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["test_normal_data = test_df[test_df['is_Normal'] == True]\n","test_normal_data = test_normal_data.drop('is_Attack', axis=1)\n","test_normal_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"qoBF7jy77D4T","executionInfo":{"status":"ok","timestamp":1718134540749,"user_tz":300,"elapsed":195,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"970ce052-5d54-40b9-d9f9-843e3f52f3ca"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0           0.027133             2             2                  2   \n","16          0.027564             2             2                  2   \n","27         19.053879            10             6                  3   \n","64          0.028153             2             2                  2   \n","81          0.685586             7             5                  2   \n","...              ...           ...           ...                ...   \n","24576       0.029444             2             2                  2   \n","24582       0.032593             2             2                  2   \n","24589       0.038902             2             2                  2   \n","24591       0.872557             7             5                  2   \n","24615       0.000000             1             0                  1   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      2         73.711012         73.711012   \n","16                     2         72.558281         72.558281   \n","27                     4          0.524828          0.314897   \n","64                     2         71.039930         71.039930   \n","81                     1         10.210244          7.293031   \n","...                  ...               ...               ...   \n","24576                  2         67.925601         67.925601   \n","24582                  2         61.362847         61.362847   \n","24589                  2         51.411180         51.411180   \n","24591                  1          8.022399          5.730285   \n","24615                  0          0.000000          0.000000   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  active.std  \\\n","0             147.422024       1.000000                   16  ...         0.0   \n","16            145.116562       1.000000                   16  ...         0.0   \n","27              0.839724       0.600000                  328  ...         0.0   \n","64            142.079859       1.000000                   16  ...         0.0   \n","81             17.503275       0.714286                  232  ...         0.0   \n","...                  ...            ...                  ...  ...         ...   \n","24576         135.851203       1.000000                   16  ...         0.0   \n","24582         122.725694       1.000000                   16  ...         0.0   \n","24589         102.822360       1.000000                   16  ...         0.0   \n","24591          13.752684       0.714286                  232  ...         0.0   \n","24615           0.000000       0.000000                    8  ...         0.0   \n","\n","          idle.min     idle.max     idle.tot     idle.avg  idle.std  \\\n","0             0.00         0.00         0.00         0.00       0.0   \n","16            0.00         0.00         0.00         0.00       0.0   \n","27     16757858.99  16757858.99  16757858.99  16757858.99       0.0   \n","64            0.00         0.00         0.00         0.00       0.0   \n","81            0.00         0.00         0.00         0.00       0.0   \n","...            ...          ...          ...          ...       ...   \n","24576         0.00         0.00         0.00         0.00       0.0   \n","24582         0.00         0.00         0.00         0.00       0.0   \n","24589         0.00         0.00         0.00         0.00       0.0   \n","24591         0.00         0.00         0.00         0.00       0.0   \n","24615         0.00         0.00         0.00         0.00       0.0   \n","\n","       fwd_init_window_size  bwd_init_window_size  fwd_last_window_size  \\\n","0                         0                     0                     0   \n","16                        0                     0                     0   \n","27                    64240                 26847                   502   \n","64                        0                     0                     0   \n","81                    64240                 26847                   501   \n","...                     ...                   ...                   ...   \n","24576                     0                     0                     0   \n","24582                     0                     0                     0   \n","24589                     0                     0                     0   \n","24591                 64240                 26847                   501   \n","24615                     0                     0                     0   \n","\n","       is_Normal  \n","0           True  \n","16          True  \n","27          True  \n","64          True  \n","81          True  \n","...          ...  \n","24576       True  \n","24582       True  \n","24589       True  \n","24591       True  \n","24615       True  \n","\n","[2502 rows x 80 columns]"],"text/html":["\n","  <div id=\"df-bec25a79-f016-4ee8-99f5-fb509e49b850\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>active.std</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","      <th>is_Normal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.027133</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>73.711012</td>\n","      <td>73.711012</td>\n","      <td>147.422024</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.027564</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>72.558281</td>\n","      <td>72.558281</td>\n","      <td>145.116562</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>19.053879</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.524828</td>\n","      <td>0.314897</td>\n","      <td>0.839724</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>16757858.99</td>\n","      <td>16757858.99</td>\n","      <td>16757858.99</td>\n","      <td>16757858.99</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>0.028153</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>71.039930</td>\n","      <td>71.039930</td>\n","      <td>142.079859</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>0.685586</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>10.210244</td>\n","      <td>7.293031</td>\n","      <td>17.503275</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24576</th>\n","      <td>0.029444</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>67.925601</td>\n","      <td>67.925601</td>\n","      <td>135.851203</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>24582</th>\n","      <td>0.032593</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>61.362847</td>\n","      <td>61.362847</td>\n","      <td>122.725694</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>24589</th>\n","      <td>0.038902</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>51.411180</td>\n","      <td>51.411180</td>\n","      <td>102.822360</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>24591</th>\n","      <td>0.872557</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>8.022399</td>\n","      <td>5.730285</td>\n","      <td>13.752684</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>24615</th>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2502 rows × 80 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bec25a79-f016-4ee8-99f5-fb509e49b850')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bec25a79-f016-4ee8-99f5-fb509e49b850 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bec25a79-f016-4ee8-99f5-fb509e49b850');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-57d6537f-a0af-476e-b6df-5ffd389e5f25\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-57d6537f-a0af-476e-b6df-5ffd389e5f25')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-57d6537f-a0af-476e-b6df-5ffd389e5f25 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_231a5f56-63ed-4521-970e-3cae60f124b6\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_normal_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_231a5f56-63ed-4521-970e-3cae60f124b6 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_normal_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_normal_data"}},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["test_normal_data.to_pickle(\"/content/drive/MyDrive/Colab Notebooks/MITA 2024/HIKARI 2021/Datasets/test_normal.pkl\")"],"metadata":{"id":"UvxMUNzY7GKV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_test = pd.read_pickle(\"/content/drive/MyDrive/Colab Notebooks/MITA 2024/HIKARI 2021/Datasets/test_normal.pkl\")\n","X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"RvTo50H0Hh_z","executionInfo":{"status":"ok","timestamp":1718134540749,"user_tz":300,"elapsed":8,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"a42420c5-c11f-43d9-b764-8c1014ff2771"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0           0.027133             2             2                  2   \n","16          0.027564             2             2                  2   \n","27         19.053879            10             6                  3   \n","64          0.028153             2             2                  2   \n","81          0.685586             7             5                  2   \n","...              ...           ...           ...                ...   \n","24576       0.029444             2             2                  2   \n","24582       0.032593             2             2                  2   \n","24589       0.038902             2             2                  2   \n","24591       0.872557             7             5                  2   \n","24615       0.000000             1             0                  1   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      2         73.711012         73.711012   \n","16                     2         72.558281         72.558281   \n","27                     4          0.524828          0.314897   \n","64                     2         71.039930         71.039930   \n","81                     1         10.210244          7.293031   \n","...                  ...               ...               ...   \n","24576                  2         67.925601         67.925601   \n","24582                  2         61.362847         61.362847   \n","24589                  2         51.411180         51.411180   \n","24591                  1          8.022399          5.730285   \n","24615                  0          0.000000          0.000000   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  active.std  \\\n","0             147.422024       1.000000                   16  ...         0.0   \n","16            145.116562       1.000000                   16  ...         0.0   \n","27              0.839724       0.600000                  328  ...         0.0   \n","64            142.079859       1.000000                   16  ...         0.0   \n","81             17.503275       0.714286                  232  ...         0.0   \n","...                  ...            ...                  ...  ...         ...   \n","24576         135.851203       1.000000                   16  ...         0.0   \n","24582         122.725694       1.000000                   16  ...         0.0   \n","24589         102.822360       1.000000                   16  ...         0.0   \n","24591          13.752684       0.714286                  232  ...         0.0   \n","24615           0.000000       0.000000                    8  ...         0.0   \n","\n","          idle.min     idle.max     idle.tot     idle.avg  idle.std  \\\n","0             0.00         0.00         0.00         0.00       0.0   \n","16            0.00         0.00         0.00         0.00       0.0   \n","27     16757858.99  16757858.99  16757858.99  16757858.99       0.0   \n","64            0.00         0.00         0.00         0.00       0.0   \n","81            0.00         0.00         0.00         0.00       0.0   \n","...            ...          ...          ...          ...       ...   \n","24576         0.00         0.00         0.00         0.00       0.0   \n","24582         0.00         0.00         0.00         0.00       0.0   \n","24589         0.00         0.00         0.00         0.00       0.0   \n","24591         0.00         0.00         0.00         0.00       0.0   \n","24615         0.00         0.00         0.00         0.00       0.0   \n","\n","       fwd_init_window_size  bwd_init_window_size  fwd_last_window_size  \\\n","0                         0                     0                     0   \n","16                        0                     0                     0   \n","27                    64240                 26847                   502   \n","64                        0                     0                     0   \n","81                    64240                 26847                   501   \n","...                     ...                   ...                   ...   \n","24576                     0                     0                     0   \n","24582                     0                     0                     0   \n","24589                     0                     0                     0   \n","24591                 64240                 26847                   501   \n","24615                     0                     0                     0   \n","\n","       is_Normal  \n","0           True  \n","16          True  \n","27          True  \n","64          True  \n","81          True  \n","...          ...  \n","24576       True  \n","24582       True  \n","24589       True  \n","24591       True  \n","24615       True  \n","\n","[2502 rows x 80 columns]"],"text/html":["\n","  <div id=\"df-13c716dd-d596-42f4-bffa-b6a5efc6247b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>active.std</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","      <th>is_Normal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.027133</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>73.711012</td>\n","      <td>73.711012</td>\n","      <td>147.422024</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.027564</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>72.558281</td>\n","      <td>72.558281</td>\n","      <td>145.116562</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>19.053879</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.524828</td>\n","      <td>0.314897</td>\n","      <td>0.839724</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>16757858.99</td>\n","      <td>16757858.99</td>\n","      <td>16757858.99</td>\n","      <td>16757858.99</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>0.028153</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>71.039930</td>\n","      <td>71.039930</td>\n","      <td>142.079859</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>0.685586</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>10.210244</td>\n","      <td>7.293031</td>\n","      <td>17.503275</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24576</th>\n","      <td>0.029444</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>67.925601</td>\n","      <td>67.925601</td>\n","      <td>135.851203</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>24582</th>\n","      <td>0.032593</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>61.362847</td>\n","      <td>61.362847</td>\n","      <td>122.725694</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>24589</th>\n","      <td>0.038902</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>51.411180</td>\n","      <td>51.411180</td>\n","      <td>102.822360</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>24591</th>\n","      <td>0.872557</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>8.022399</td>\n","      <td>5.730285</td>\n","      <td>13.752684</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>24615</th>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2502 rows × 80 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13c716dd-d596-42f4-bffa-b6a5efc6247b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-13c716dd-d596-42f4-bffa-b6a5efc6247b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-13c716dd-d596-42f4-bffa-b6a5efc6247b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8e2f87e3-72ad-45c5-b7da-850be5be66b7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e2f87e3-72ad-45c5-b7da-850be5be66b7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8e2f87e3-72ad-45c5-b7da-850be5be66b7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_ff2e1635-eb8b-4497-9525-08cf179c20bc\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_ff2e1635-eb8b-4497-9525-08cf179c20bc button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test"}},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["X_test = X_test.drop('is_Normal', axis=1)\n","X_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"ezZ_5YX7IEdH","executionInfo":{"status":"ok","timestamp":1718134541028,"user_tz":300,"elapsed":285,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"df564f64-bb5a-4742-da78-5b1a0303ea7c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0           0.027133             2             2                  2   \n","16          0.027564             2             2                  2   \n","27         19.053879            10             6                  3   \n","64          0.028153             2             2                  2   \n","81          0.685586             7             5                  2   \n","...              ...           ...           ...                ...   \n","24576       0.029444             2             2                  2   \n","24582       0.032593             2             2                  2   \n","24589       0.038902             2             2                  2   \n","24591       0.872557             7             5                  2   \n","24615       0.000000             1             0                  1   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      2         73.711012         73.711012   \n","16                     2         72.558281         72.558281   \n","27                     4          0.524828          0.314897   \n","64                     2         71.039930         71.039930   \n","81                     1         10.210244          7.293031   \n","...                  ...               ...               ...   \n","24576                  2         67.925601         67.925601   \n","24582                  2         61.362847         61.362847   \n","24589                  2         51.411180         51.411180   \n","24591                  1          8.022399          5.730285   \n","24615                  0          0.000000          0.000000   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  \\\n","0             147.422024       1.000000                   16  ...   \n","16            145.116562       1.000000                   16  ...   \n","27              0.839724       0.600000                  328  ...   \n","64            142.079859       1.000000                   16  ...   \n","81             17.503275       0.714286                  232  ...   \n","...                  ...            ...                  ...  ...   \n","24576         135.851203       1.000000                   16  ...   \n","24582         122.725694       1.000000                   16  ...   \n","24589         102.822360       1.000000                   16  ...   \n","24591          13.752684       0.714286                  232  ...   \n","24615           0.000000       0.000000                    8  ...   \n","\n","         active.avg  active.std     idle.min     idle.max     idle.tot  \\\n","0      2.713299e+04         0.0         0.00         0.00         0.00   \n","16     2.756405e+04         0.0         0.00         0.00         0.00   \n","27     2.296020e+06         0.0  16757858.99  16757858.99  16757858.99   \n","64     2.815318e+04         0.0         0.00         0.00         0.00   \n","81     6.874180e+05         0.0         0.00         0.00         0.00   \n","...             ...         ...          ...          ...          ...   \n","24576  2.944398e+04         0.0         0.00         0.00         0.00   \n","24582  3.259301e+04         0.0         0.00         0.00         0.00   \n","24589  3.890204e+04         0.0         0.00         0.00         0.00   \n","24591  8.744390e+05         0.0         0.00         0.00         0.00   \n","24615  0.000000e+00         0.0         0.00         0.00         0.00   \n","\n","          idle.avg  idle.std  fwd_init_window_size  bwd_init_window_size  \\\n","0             0.00       0.0                     0                     0   \n","16            0.00       0.0                     0                     0   \n","27     16757858.99       0.0                 64240                 26847   \n","64            0.00       0.0                     0                     0   \n","81            0.00       0.0                 64240                 26847   \n","...            ...       ...                   ...                   ...   \n","24576         0.00       0.0                     0                     0   \n","24582         0.00       0.0                     0                     0   \n","24589         0.00       0.0                     0                     0   \n","24591         0.00       0.0                 64240                 26847   \n","24615         0.00       0.0                     0                     0   \n","\n","       fwd_last_window_size  \n","0                         0  \n","16                        0  \n","27                      502  \n","64                        0  \n","81                      501  \n","...                     ...  \n","24576                     0  \n","24582                     0  \n","24589                     0  \n","24591                   501  \n","24615                     0  \n","\n","[2502 rows x 79 columns]"],"text/html":["\n","  <div id=\"df-77ff1e48-f275-406d-a39c-8d4d079fc4cb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>active.avg</th>\n","      <th>active.std</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.027133</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>73.711012</td>\n","      <td>73.711012</td>\n","      <td>147.422024</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>2.713299e+04</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>0.027564</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>72.558281</td>\n","      <td>72.558281</td>\n","      <td>145.116562</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>2.756405e+04</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>19.053879</td>\n","      <td>10</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0.524828</td>\n","      <td>0.314897</td>\n","      <td>0.839724</td>\n","      <td>0.600000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>2.296020e+06</td>\n","      <td>0.0</td>\n","      <td>16757858.99</td>\n","      <td>16757858.99</td>\n","      <td>16757858.99</td>\n","      <td>16757858.99</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>502</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>0.028153</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>71.039930</td>\n","      <td>71.039930</td>\n","      <td>142.079859</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>2.815318e+04</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>0.685586</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>10.210244</td>\n","      <td>7.293031</td>\n","      <td>17.503275</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>6.874180e+05</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>24576</th>\n","      <td>0.029444</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>67.925601</td>\n","      <td>67.925601</td>\n","      <td>135.851203</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>2.944398e+04</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>24582</th>\n","      <td>0.032593</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>61.362847</td>\n","      <td>61.362847</td>\n","      <td>122.725694</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>3.259301e+04</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>24589</th>\n","      <td>0.038902</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>51.411180</td>\n","      <td>51.411180</td>\n","      <td>102.822360</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>3.890204e+04</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>24591</th>\n","      <td>0.872557</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>8.022399</td>\n","      <td>5.730285</td>\n","      <td>13.752684</td>\n","      <td>0.714286</td>\n","      <td>232</td>\n","      <td>...</td>\n","      <td>8.744390e+05</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>64240</td>\n","      <td>26847</td>\n","      <td>501</td>\n","    </tr>\n","    <tr>\n","      <th>24615</th>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.0</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2502 rows × 79 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77ff1e48-f275-406d-a39c-8d4d079fc4cb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-77ff1e48-f275-406d-a39c-8d4d079fc4cb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-77ff1e48-f275-406d-a39c-8d4d079fc4cb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-04166b45-455a-425f-b85c-97fe84b91ec7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04166b45-455a-425f-b85c-97fe84b91ec7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-04166b45-455a-425f-b85c-97fe84b91ec7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_64185249-cb0c-47fb-82cd-67c15d7a3bc1\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_64185249-cb0c-47fb-82cd-67c15d7a3bc1 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_test');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test"}},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["# Encode labels and scale features\n","scaler = MinMaxScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)\n","\n","# Convert to PyTorch tensors\n","X_train = torch.tensor(X_train, dtype=torch.float).to(device)\n","X_train = X_train.unsqueeze(1)\n","X_test = torch.tensor(X_test, dtype=torch.float).to(device)\n","X_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qxWXVg4j7IS2","executionInfo":{"status":"ok","timestamp":1718134541029,"user_tz":300,"elapsed":285,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"7ac4c7ab-49c2-4861-a2d0-7bbbd2ea8fc8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([10005, 1, 79])"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4_2-idb67K_E","executionInfo":{"status":"ok","timestamp":1718134541029,"user_tz":300,"elapsed":11,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"727a3bd9-9139-4f85-c5a3-23c5f6cc2dd1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([2502, 79])"]},"metadata":{},"execution_count":109}]},{"cell_type":"code","source":["class AE(nn.Module):\n","    def __init__(self):\n","        super(AE, self).__init__()\n","        self.encoder = nn.Sequential(\n","            nn.Conv1d(1, 79, kernel_size=2, stride=1, padding=1),\n","            nn.ReLU(),\n","            nn.MaxPool1d(kernel_size=2, stride=2),\n","            nn.Conv1d(79, 32, kernel_size=2, stride=1, padding=1),\n","            nn.ReLU(),\n","            nn.MaxPool1d(kernel_size=2, stride=2)\n","        )\n","        self.decoder = nn.Sequential(\n","           nn.ConvTranspose1d(32, 79,\n","                              kernel_size=3,\n","                              stride=2,\n","                              padding=1,\n","                              output_padding=1),\n","          nn.ReLU(),\n","          nn.ConvTranspose1d(79, 1,\n","                             kernel_size=2,\n","                             stride=2,\n","                             padding=1,\n","                             output_padding=1),\n","          nn.Sigmoid()\n","        )\n","    def forward(self, x):\n","      x = self.encoder(x)\n","      x = self.decoder(x)\n","      return x"],"metadata":{"id":"eeeZ-e2qyx7G"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model = AE().to(device)\n","criterion = nn.MSELoss()\n","optimizer = optim.Adam(model.parameters(), lr=0.001)\n","print(model)"],"metadata":{"id":"O28Mchcl1-Jf","executionInfo":{"status":"ok","timestamp":1718134541029,"user_tz":300,"elapsed":9,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"d7734f80-d28a-4cea-ac5c-ba9e583ac010"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["AE(\n","  (encoder): Sequential(\n","    (0): Conv1d(1, 79, kernel_size=(2,), stride=(1,), padding=(1,))\n","    (1): ReLU()\n","    (2): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","    (3): Conv1d(79, 32, kernel_size=(2,), stride=(1,), padding=(1,))\n","    (4): ReLU()\n","    (5): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","  )\n","  (decoder): Sequential(\n","    (0): ConvTranspose1d(32, 79, kernel_size=(3,), stride=(2,), padding=(1,), output_padding=(1,))\n","    (1): ReLU()\n","    (2): ConvTranspose1d(79, 1, kernel_size=(2,), stride=(2,), padding=(1,), output_padding=(1,))\n","    (3): Sigmoid()\n","  )\n",")\n"]}]},{"cell_type":"code","source":["# Training the Autoencoder\n","model.train()\n","\n","x_axis = []\n","y_axis = []\n","\n","outputs = []\n","epochs = 1000\n","\n","print(\"AUTOENCODER RECONSTRUCTION LOSS\\n\")\n","for epoch in range(epochs):\n","  # for idx, data in enumerate(train_loader):\n","    # x_train = data[0].to(device)\n","\n","    optimizer.zero_grad()\n","    pred = model(X_train).to(device)\n","    loss = criterion(pred, X_train).to(device)\n","\n","    loss.backward()\n","    optimizer.step()\n","\n","    if (epoch+1) % 50 == 0:\n","      x_axis.append(epoch)\n","      y_axis.append(loss.item())\n","      print(f'Epoch {epoch+1}/{epochs}, Train Loss: {loss.item()}')\n","\n","fig, x1 = plt.subplots()\n","x1.set_xlabel('$Epoch$')\n","x1.set_ylabel('$Loss$')\n","x1.plot(x_axis, y_axis, label=\"Loss\")\n","x1.legend(loc='upper left')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":835},"id":"gK_cNbUN7l5y","executionInfo":{"status":"ok","timestamp":1718140030884,"user_tz":300,"elapsed":5489859,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"outputId":"5c34c4dd-d91e-4e7a-f1f9-44519315d4f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["AUTOENCODER RECONSTRUCTION LOSS\n","\n","Epoch 50/1000, Train Loss: 0.035951267927885056\n","Epoch 100/1000, Train Loss: 0.017132604494690895\n","Epoch 150/1000, Train Loss: 0.006738864816725254\n","Epoch 200/1000, Train Loss: 0.004505324177443981\n","Epoch 250/1000, Train Loss: 0.0037205053959041834\n","Epoch 300/1000, Train Loss: 0.0033347327262163162\n","Epoch 350/1000, Train Loss: 0.0030173170380294323\n","Epoch 400/1000, Train Loss: 0.002719869138672948\n","Epoch 450/1000, Train Loss: 0.0023505203425884247\n","Epoch 500/1000, Train Loss: 0.0018243236700072885\n","Epoch 550/1000, Train Loss: 0.0013341389130800962\n","Epoch 600/1000, Train Loss: 0.0010721045546233654\n","Epoch 650/1000, Train Loss: 0.0008714543655514717\n","Epoch 700/1000, Train Loss: 0.0007263255538418889\n","Epoch 750/1000, Train Loss: 0.0006083901971578598\n","Epoch 800/1000, Train Loss: 0.0005135871469974518\n","Epoch 850/1000, Train Loss: 0.0004436928720679134\n","Epoch 900/1000, Train Loss: 0.000390803994378075\n","Epoch 950/1000, Train Loss: 0.00035012754960916936\n","Epoch 1000/1000, Train Loss: 0.00031882355688139796\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["torch.save(model.state_dict(), \"/content/drive/MyDrive/Colab Notebooks/MITA 2024/HIKARI 2021/ModelSaving/AE_HIKARI.pth\")"],"metadata":{"id":"GziSpcyhIVN3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_model = AE().to(device)"],"metadata":{"id":"uNdVfj_x6IB0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_model.load_state_dict(torch.load(\"/content/drive/MyDrive/Colab Notebooks/MITA 2024/HIKARI 2021/ModelSaving/AE_HIKARI.pth\"))"],"metadata":{"id":"nCnM83WwIm4u","executionInfo":{"status":"ok","timestamp":1718140031058,"user_tz":300,"elapsed":3,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"33ca9230-0ee5-4c1d-bedc-be3475316d0e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<All keys matched successfully>"]},"metadata":{},"execution_count":115}]},{"cell_type":"code","source":["# Evaluate the Autoencoder on Test Data\n","X_test = X_test.unsqueeze(1)\n","model.eval()\n","\n","with torch.no_grad():\n","  n = len(X_test)\n","  print(\"Size of n: \", len(X_test))\n","  reconstructed = new_model(X_test).to(device)\n","  # normal_loss = torch.sum((X_test - reconstructed) ** 2, dim=1)\n","  normal_loss = (torch.sum(abs(X_test - reconstructed) ** 2, dim=1)) / len(X_test)\n","\n","normal_loss_np = normal_loss.cpu().numpy()  # Convert to numpy array\n","normal_loss_np = normal_loss_np.reshape(-1)\n","# print(\"AUTOENCODER RECONSTRUCTION LOSS\\n\")\n","# print(f'Test Loss: {loss.item():}')\n","print(\"Reconstruction normal error: \", normal_loss_np)\n","print(\"Reconstruction normal error percentile: \", np.percentile(normal_loss_np, [0, 25, 50, 75, 90, 95, 99]))\n","print(\"Size of normal loss: \", normal_loss_np.size)"],"metadata":{"id":"bTnd91XMIpLu","executionInfo":{"status":"ok","timestamp":1718140031564,"user_tz":300,"elapsed":507,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"74e0b74e-4023-4c8d-d9d8-dc5fa79d1c23"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Size of n:  2502\n","Reconstruction normal error:  [1.3530002e-08 2.3725876e-08 2.4257851e-08 ... 1.5364986e-08 4.5554476e-08\n"," 2.0818471e-10]\n","Reconstruction normal error percentile:  [7.68821681e-26 1.43890055e-08 2.75366379e-08 6.54180834e-08\n"," 2.12035116e-07 3.92294588e-07 1.20774539e-06]\n","Size of normal loss:  197658\n"]}]},{"cell_type":"code","source":["print(format(np.percentile(normal_loss_np, [99])))"],"metadata":{"id":"bzR5qvh0Iq5u","executionInfo":{"status":"ok","timestamp":1718140031564,"user_tz":300,"elapsed":5,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"c324caae-ee0a-4fe6-e11e-3047bc30694f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1.20774539e-06]\n"]}]},{"cell_type":"code","source":["test_attack_data = pd.read_pickle('/content/drive/MyDrive/Colab Notebooks/MITA 2024/HIKARI 2021/Datasets/Hikari_test_2labels.pkl')\n","test_attack_data"],"metadata":{"id":"B7shs6a6Istu","executionInfo":{"status":"ok","timestamp":1718140032192,"user_tz":300,"elapsed":630,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/","height":443},"outputId":"bf4ccca3-4bd1-4d06-dc0f-70bf9b289365"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0            0.357034             9            12                  3   \n","1            0.000000             1             0                  1   \n","2            0.026567             2             2                  2   \n","3            0.033777             1             1                  1   \n","4            0.023762             1             1                  1   \n","...               ...           ...           ...                ...   \n","111051       0.027677             2             2                  2   \n","111052       0.023514             1             1                  1   \n","111053     119.993840             3             0                  3   \n","111054       0.230230            10            13                  3   \n","111055       0.000076             1             1                  0   \n","\n","        bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                       7         25.207686         33.610247   \n","1                       0          0.000000          0.000000   \n","2                       2         75.281414         75.281414   \n","3                       1         29.605946         29.605946   \n","4                       1         42.084021         42.084021   \n","...                   ...               ...               ...   \n","111051                  2         72.262013         72.262013   \n","111052                  1         42.527797         42.527797   \n","111053                  0          0.025001          0.000000   \n","111054                  8         43.434853         56.465310   \n","111055                  0      13148.288401      13148.288401   \n","\n","        flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  \\\n","0               58.817933       1.333333                  296  ...   \n","1                0.000000       0.000000                    8  ...   \n","2              150.562829       1.000000                   16  ...   \n","3               59.211892       1.000000                    8  ...   \n","4               84.168043       1.000000                    8  ...   \n","...                   ...            ...                  ...  ...   \n","111051         144.524025       1.000000                   16  ...   \n","111052          85.055594       1.000000                    8  ...   \n","111053           0.025001       0.000000                   24  ...   \n","111054          99.900163       1.300000                  328  ...   \n","111055       26296.576803       1.000000                   40  ...   \n","\n","            idle.min      idle.max      idle.tot      idle.avg    idle.std  \\\n","0       0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00    0.000000   \n","1       0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00    0.000000   \n","2       0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00    0.000000   \n","3       0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00    0.000000   \n","4       0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00    0.000000   \n","...              ...           ...           ...           ...         ...   \n","111051  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00    0.000000   \n","111052  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00    0.000000   \n","111053  5.999647e+07  5.999737e+07  1.199938e+08  5.999692e+07  633.720014   \n","111054  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00    0.000000   \n","111055  0.000000e+00  0.000000e+00  0.000000e+00  0.000000e+00    0.000000   \n","\n","        fwd_init_window_size  bwd_init_window_size  fwd_last_window_size  \\\n","0                      29200                 65160                   402   \n","1                          0                     0                     0   \n","2                          0                     0                     0   \n","3                          0                     0                     0   \n","4                          0                     0                     0   \n","...                      ...                   ...                   ...   \n","111051                     0                     0                     0   \n","111052                     0                     0                     0   \n","111053                     0                     0                     0   \n","111054                 29200                 65160                   402   \n","111055                 29200                     0                 29200   \n","\n","        is_Attack  is_Normal  \n","0            True      False  \n","1           False       True  \n","2           False       True  \n","3           False       True  \n","4           False       True  \n","...           ...        ...  \n","111051      False       True  \n","111052      False       True  \n","111053      False       True  \n","111054       True      False  \n","111055      False       True  \n","\n","[111056 rows x 81 columns]"],"text/html":["\n","  <div id=\"df-5fa92c75-2369-4734-96f2-5b639c2a1370\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","      <th>is_Attack</th>\n","      <th>is_Normal</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.357034</td>\n","      <td>9</td>\n","      <td>12</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>25.207686</td>\n","      <td>33.610247</td>\n","      <td>58.817933</td>\n","      <td>1.333333</td>\n","      <td>296</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>29200</td>\n","      <td>65160</td>\n","      <td>402</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.000000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.026567</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>75.281414</td>\n","      <td>75.281414</td>\n","      <td>150.562829</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.033777</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>29.605946</td>\n","      <td>29.605946</td>\n","      <td>59.211892</td>\n","      <td>1.000000</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.023762</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>42.084021</td>\n","      <td>42.084021</td>\n","      <td>84.168043</td>\n","      <td>1.000000</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>111051</th>\n","      <td>0.027677</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>72.262013</td>\n","      <td>72.262013</td>\n","      <td>144.524025</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>111052</th>\n","      <td>0.023514</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>42.527797</td>\n","      <td>42.527797</td>\n","      <td>85.055594</td>\n","      <td>1.000000</td>\n","      <td>8</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>111053</th>\n","      <td>119.993840</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0.025001</td>\n","      <td>0.000000</td>\n","      <td>0.025001</td>\n","      <td>0.000000</td>\n","      <td>24</td>\n","      <td>...</td>\n","      <td>5.999647e+07</td>\n","      <td>5.999737e+07</td>\n","      <td>1.199938e+08</td>\n","      <td>5.999692e+07</td>\n","      <td>633.720014</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>111054</th>\n","      <td>0.230230</td>\n","      <td>10</td>\n","      <td>13</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>43.434853</td>\n","      <td>56.465310</td>\n","      <td>99.900163</td>\n","      <td>1.300000</td>\n","      <td>328</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>29200</td>\n","      <td>65160</td>\n","      <td>402</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>111055</th>\n","      <td>0.000076</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13148.288401</td>\n","      <td>13148.288401</td>\n","      <td>26296.576803</td>\n","      <td>1.000000</td>\n","      <td>40</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>29200</td>\n","      <td>0</td>\n","      <td>29200</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>111056 rows × 81 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5fa92c75-2369-4734-96f2-5b639c2a1370')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5fa92c75-2369-4734-96f2-5b639c2a1370 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5fa92c75-2369-4734-96f2-5b639c2a1370');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bc2e33a2-f8b2-4628-8946-74cba1b3339c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bc2e33a2-f8b2-4628-8946-74cba1b3339c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bc2e33a2-f8b2-4628-8946-74cba1b3339c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e407640c-7c59-4d8a-b0a6-23332ee1e3d4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('test_attack_data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e407640c-7c59-4d8a-b0a6-23332ee1e3d4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('test_attack_data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"test_attack_data"}},"metadata":{},"execution_count":118}]},{"cell_type":"code","source":["test_attack_data = test_df[test_df['is_Attack'] == True]\n","test_attack_data = test_attack_data.drop('is_Normal', axis=1)\n","test_attack_data = test_attack_data.reset_index(drop=True)"],"metadata":{"id":"gEE4U_CiMKjz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_attack_data.to_pickle(\"/content/drive/MyDrive/Colab Notebooks/MITA 2024/HIKARI 2021/Datasets/test_attack.pkl\")"],"metadata":{"id":"I-4MJj6AMN14"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_test_attack = pd.read_pickle(\"/content/drive/MyDrive/Colab Notebooks/MITA 2024/HIKARI 2021/Datasets/test_attack.pkl\")\n","X_test_attack"],"metadata":{"id":"oD34dWA7MQw9","executionInfo":{"status":"ok","timestamp":1718140032529,"user_tz":300,"elapsed":199,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/","height":443},"outputId":"078fecd2-756c-41d5-e073-f73f5ea9711b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0         100.475928            10             0                 10   \n","1           0.000315             2             2                  2   \n","2           0.000004             1             1                  1   \n","3           0.000001             1             1                  1   \n","4           0.000004             1             1                  1   \n","...              ...           ...           ...                ...   \n","22117       0.000002             1             1                  1   \n","22118       0.000004             1             1                  1   \n","22119       0.000001             1             1                  1   \n","22120       0.000005             1             1                  1   \n","22121      20.054275            13            14                  7   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      0      9.952600e-02      0.000000e+00   \n","1                      2      6.350195e+03      6.350195e+03   \n","2                      0      2.467238e+05      2.467238e+05   \n","3                      0      1.048576e+06      1.048576e+06   \n","4                      0      2.467238e+05      2.467238e+05   \n","...                  ...               ...               ...   \n","22117                  0      4.660338e+05      4.660338e+05   \n","22118                  0      2.467238e+05      2.467238e+05   \n","22119                  0      1.048576e+06      1.048576e+06   \n","22120                  0      1.997288e+05      1.997288e+05   \n","22121                  6      6.482410e-01      6.981060e-01   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  \\\n","0           9.952600e-02       0.000000                   80  ...   \n","1           1.270039e+04       1.000000                   16  ...   \n","2           4.934475e+05       1.000000                   20  ...   \n","3           2.097152e+06       1.000000                   20  ...   \n","4           4.934475e+05       1.000000                   20  ...   \n","...                  ...            ...                  ...  ...   \n","22117       9.320676e+05       1.000000                   20  ...   \n","22118       4.934475e+05       1.000000                   20  ...   \n","22119       2.097152e+06       1.000000                   20  ...   \n","22120       3.994575e+05       1.000000                   20  ...   \n","22121       1.346346e+00       1.076923                  424  ...   \n","\n","         active.std      idle.min     idle.max     idle.tot     idle.avg  \\\n","0      4.983880e+06  9.040719e+06  35599052.91  93022574.90  23255643.73   \n","1      0.000000e+00  0.000000e+00         0.00         0.00         0.00   \n","2      0.000000e+00  0.000000e+00         0.00         0.00         0.00   \n","3      0.000000e+00  0.000000e+00         0.00         0.00         0.00   \n","4      0.000000e+00  0.000000e+00         0.00         0.00         0.00   \n","...             ...           ...          ...          ...          ...   \n","22117  0.000000e+00  0.000000e+00         0.00         0.00         0.00   \n","22118  0.000000e+00  0.000000e+00         0.00         0.00         0.00   \n","22119  0.000000e+00  0.000000e+00         0.00         0.00         0.00   \n","22120  0.000000e+00  0.000000e+00         0.00         0.00         0.00   \n","22121  1.719762e+05  1.980470e+07  19804703.95  19804703.95  19804703.95   \n","\n","           idle.std  fwd_init_window_size  bwd_init_window_size  \\\n","0      1.184459e+07                     0                     0   \n","1      0.000000e+00                     0                     0   \n","2      0.000000e+00                    64                     0   \n","3      0.000000e+00                    64                     0   \n","4      0.000000e+00                    64                     0   \n","...             ...                   ...                   ...   \n","22117  0.000000e+00                    64                     0   \n","22118  0.000000e+00                    64                     0   \n","22119  0.000000e+00                    64                     0   \n","22120  0.000000e+00                    64                     0   \n","22121  0.000000e+00                 64240                 65160   \n","\n","       fwd_last_window_size  is_Attack  \n","0                         0       True  \n","1                         0       True  \n","2                        64       True  \n","3                        64       True  \n","4                        64       True  \n","...                     ...        ...  \n","22117                    64       True  \n","22118                    64       True  \n","22119                    64       True  \n","22120                    64       True  \n","22121                   501       True  \n","\n","[22122 rows x 80 columns]"],"text/html":["\n","  <div id=\"df-72036ec8-9fe8-4f47-b5f0-dc8c5be4adfb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>active.std</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","      <th>is_Attack</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100.475928</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>9.952600e-02</td>\n","      <td>0.000000e+00</td>\n","      <td>9.952600e-02</td>\n","      <td>0.000000</td>\n","      <td>80</td>\n","      <td>...</td>\n","      <td>4.983880e+06</td>\n","      <td>9.040719e+06</td>\n","      <td>35599052.91</td>\n","      <td>93022574.90</td>\n","      <td>23255643.73</td>\n","      <td>1.184459e+07</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.000315</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>6.350195e+03</td>\n","      <td>6.350195e+03</td>\n","      <td>1.270039e+04</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000004</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.467238e+05</td>\n","      <td>2.467238e+05</td>\n","      <td>4.934475e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.048576e+06</td>\n","      <td>1.048576e+06</td>\n","      <td>2.097152e+06</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.000004</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.467238e+05</td>\n","      <td>2.467238e+05</td>\n","      <td>4.934475e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>22117</th>\n","      <td>0.000002</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4.660338e+05</td>\n","      <td>4.660338e+05</td>\n","      <td>9.320676e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>22118</th>\n","      <td>0.000004</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.467238e+05</td>\n","      <td>2.467238e+05</td>\n","      <td>4.934475e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>22119</th>\n","      <td>0.000001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.048576e+06</td>\n","      <td>1.048576e+06</td>\n","      <td>2.097152e+06</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>22120</th>\n","      <td>0.000005</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.997288e+05</td>\n","      <td>1.997288e+05</td>\n","      <td>3.994575e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>22121</th>\n","      <td>20.054275</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>6.482410e-01</td>\n","      <td>6.981060e-01</td>\n","      <td>1.346346e+00</td>\n","      <td>1.076923</td>\n","      <td>424</td>\n","      <td>...</td>\n","      <td>1.719762e+05</td>\n","      <td>1.980470e+07</td>\n","      <td>19804703.95</td>\n","      <td>19804703.95</td>\n","      <td>19804703.95</td>\n","      <td>0.000000e+00</td>\n","      <td>64240</td>\n","      <td>65160</td>\n","      <td>501</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>22122 rows × 80 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-72036ec8-9fe8-4f47-b5f0-dc8c5be4adfb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-72036ec8-9fe8-4f47-b5f0-dc8c5be4adfb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-72036ec8-9fe8-4f47-b5f0-dc8c5be4adfb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fd3fdd83-2708-49db-b265-430369419df3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd3fdd83-2708-49db-b265-430369419df3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fd3fdd83-2708-49db-b265-430369419df3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_72bbeeb3-361e-4e4b-9106-754e2f524819\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test_attack')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_72bbeeb3-361e-4e4b-9106-754e2f524819 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_test_attack');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test_attack"}},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["X_test_attack = X_test_attack.drop('is_Attack', axis=1)\n","X_test_attack"],"metadata":{"id":"0S2iqPqkMZZW","executionInfo":{"status":"ok","timestamp":1718140032714,"user_tz":300,"elapsed":186,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/","height":443},"outputId":"773f9821-9153-44ce-d93f-ebc92e07f300"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       flow_duration  fwd_pkts_tot  bwd_pkts_tot  fwd_data_pkts_tot  \\\n","0         100.475928            10             0                 10   \n","1           0.000315             2             2                  2   \n","2           0.000004             1             1                  1   \n","3           0.000001             1             1                  1   \n","4           0.000004             1             1                  1   \n","...              ...           ...           ...                ...   \n","22117       0.000002             1             1                  1   \n","22118       0.000004             1             1                  1   \n","22119       0.000001             1             1                  1   \n","22120       0.000005             1             1                  1   \n","22121      20.054275            13            14                  7   \n","\n","       bwd_data_pkts_tot  fwd_pkts_per_sec  bwd_pkts_per_sec  \\\n","0                      0      9.952600e-02      0.000000e+00   \n","1                      2      6.350195e+03      6.350195e+03   \n","2                      0      2.467238e+05      2.467238e+05   \n","3                      0      1.048576e+06      1.048576e+06   \n","4                      0      2.467238e+05      2.467238e+05   \n","...                  ...               ...               ...   \n","22117                  0      4.660338e+05      4.660338e+05   \n","22118                  0      2.467238e+05      2.467238e+05   \n","22119                  0      1.048576e+06      1.048576e+06   \n","22120                  0      1.997288e+05      1.997288e+05   \n","22121                  6      6.482410e-01      6.981060e-01   \n","\n","       flow_pkts_per_sec  down_up_ratio  fwd_header_size_tot  ...  \\\n","0           9.952600e-02       0.000000                   80  ...   \n","1           1.270039e+04       1.000000                   16  ...   \n","2           4.934475e+05       1.000000                   20  ...   \n","3           2.097152e+06       1.000000                   20  ...   \n","4           4.934475e+05       1.000000                   20  ...   \n","...                  ...            ...                  ...  ...   \n","22117       9.320676e+05       1.000000                   20  ...   \n","22118       4.934475e+05       1.000000                   20  ...   \n","22119       2.097152e+06       1.000000                   20  ...   \n","22120       3.994575e+05       1.000000                   20  ...   \n","22121       1.346346e+00       1.076923                  424  ...   \n","\n","         active.avg    active.std      idle.min     idle.max     idle.tot  \\\n","0      3.726677e+06  4.983880e+06  9.040719e+06  35599052.91  93022574.90   \n","1      3.149509e+02  0.000000e+00  0.000000e+00         0.00         0.00   \n","2      4.053116e+00  0.000000e+00  0.000000e+00         0.00         0.00   \n","3      9.536740e-01  0.000000e+00  0.000000e+00         0.00         0.00   \n","4      4.053116e+00  0.000000e+00  0.000000e+00         0.00         0.00   \n","...             ...           ...           ...          ...          ...   \n","22117  2.145767e+00  0.000000e+00  0.000000e+00         0.00         0.00   \n","22118  4.053116e+00  0.000000e+00  0.000000e+00         0.00         0.00   \n","22119  9.536740e-01  0.000000e+00  0.000000e+00         0.00         0.00   \n","22120  5.006790e+00  0.000000e+00  0.000000e+00         0.00         0.00   \n","22121  1.273125e+05  1.719762e+05  1.980470e+07  19804703.95  19804703.95   \n","\n","          idle.avg      idle.std  fwd_init_window_size  bwd_init_window_size  \\\n","0      23255643.73  1.184459e+07                     0                     0   \n","1             0.00  0.000000e+00                     0                     0   \n","2             0.00  0.000000e+00                    64                     0   \n","3             0.00  0.000000e+00                    64                     0   \n","4             0.00  0.000000e+00                    64                     0   \n","...            ...           ...                   ...                   ...   \n","22117         0.00  0.000000e+00                    64                     0   \n","22118         0.00  0.000000e+00                    64                     0   \n","22119         0.00  0.000000e+00                    64                     0   \n","22120         0.00  0.000000e+00                    64                     0   \n","22121  19804703.95  0.000000e+00                 64240                 65160   \n","\n","       fwd_last_window_size  \n","0                         0  \n","1                         0  \n","2                        64  \n","3                        64  \n","4                        64  \n","...                     ...  \n","22117                    64  \n","22118                    64  \n","22119                    64  \n","22120                    64  \n","22121                   501  \n","\n","[22122 rows x 79 columns]"],"text/html":["\n","  <div id=\"df-078d7255-d37c-4aa2-bdbe-4f940932ff36\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>flow_duration</th>\n","      <th>fwd_pkts_tot</th>\n","      <th>bwd_pkts_tot</th>\n","      <th>fwd_data_pkts_tot</th>\n","      <th>bwd_data_pkts_tot</th>\n","      <th>fwd_pkts_per_sec</th>\n","      <th>bwd_pkts_per_sec</th>\n","      <th>flow_pkts_per_sec</th>\n","      <th>down_up_ratio</th>\n","      <th>fwd_header_size_tot</th>\n","      <th>...</th>\n","      <th>active.avg</th>\n","      <th>active.std</th>\n","      <th>idle.min</th>\n","      <th>idle.max</th>\n","      <th>idle.tot</th>\n","      <th>idle.avg</th>\n","      <th>idle.std</th>\n","      <th>fwd_init_window_size</th>\n","      <th>bwd_init_window_size</th>\n","      <th>fwd_last_window_size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100.475928</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>10</td>\n","      <td>0</td>\n","      <td>9.952600e-02</td>\n","      <td>0.000000e+00</td>\n","      <td>9.952600e-02</td>\n","      <td>0.000000</td>\n","      <td>80</td>\n","      <td>...</td>\n","      <td>3.726677e+06</td>\n","      <td>4.983880e+06</td>\n","      <td>9.040719e+06</td>\n","      <td>35599052.91</td>\n","      <td>93022574.90</td>\n","      <td>23255643.73</td>\n","      <td>1.184459e+07</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.000315</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>6.350195e+03</td>\n","      <td>6.350195e+03</td>\n","      <td>1.270039e+04</td>\n","      <td>1.000000</td>\n","      <td>16</td>\n","      <td>...</td>\n","      <td>3.149509e+02</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.000004</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.467238e+05</td>\n","      <td>2.467238e+05</td>\n","      <td>4.934475e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>4.053116e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.000001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.048576e+06</td>\n","      <td>1.048576e+06</td>\n","      <td>2.097152e+06</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>9.536740e-01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.000004</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.467238e+05</td>\n","      <td>2.467238e+05</td>\n","      <td>4.934475e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>4.053116e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>22117</th>\n","      <td>0.000002</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>4.660338e+05</td>\n","      <td>4.660338e+05</td>\n","      <td>9.320676e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>2.145767e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>22118</th>\n","      <td>0.000004</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2.467238e+05</td>\n","      <td>2.467238e+05</td>\n","      <td>4.934475e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>4.053116e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>22119</th>\n","      <td>0.000001</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.048576e+06</td>\n","      <td>1.048576e+06</td>\n","      <td>2.097152e+06</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>9.536740e-01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>22120</th>\n","      <td>0.000005</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.997288e+05</td>\n","      <td>1.997288e+05</td>\n","      <td>3.994575e+05</td>\n","      <td>1.000000</td>\n","      <td>20</td>\n","      <td>...</td>\n","      <td>5.006790e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.000000e+00</td>\n","      <td>64</td>\n","      <td>0</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>22121</th>\n","      <td>20.054275</td>\n","      <td>13</td>\n","      <td>14</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>6.482410e-01</td>\n","      <td>6.981060e-01</td>\n","      <td>1.346346e+00</td>\n","      <td>1.076923</td>\n","      <td>424</td>\n","      <td>...</td>\n","      <td>1.273125e+05</td>\n","      <td>1.719762e+05</td>\n","      <td>1.980470e+07</td>\n","      <td>19804703.95</td>\n","      <td>19804703.95</td>\n","      <td>19804703.95</td>\n","      <td>0.000000e+00</td>\n","      <td>64240</td>\n","      <td>65160</td>\n","      <td>501</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>22122 rows × 79 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-078d7255-d37c-4aa2-bdbe-4f940932ff36')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-078d7255-d37c-4aa2-bdbe-4f940932ff36 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-078d7255-d37c-4aa2-bdbe-4f940932ff36');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a5e567d-8eef-4b3c-bfc4-85df4cfa634a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a5e567d-8eef-4b3c-bfc4-85df4cfa634a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a5e567d-8eef-4b3c-bfc4-85df4cfa634a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a9d91e12-8e25-4876-89ca-13580f2cd654\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X_test_attack')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a9d91e12-8e25-4876-89ca-13580f2cd654 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X_test_attack');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X_test_attack"}},"metadata":{},"execution_count":122}]},{"cell_type":"code","source":["# Scale the anomalous data\n","X_test_attack = scaler.transform(X_test_attack)\n","\n","# Convert to PyTorch tensors\n","X_test_attack = torch.tensor(X_test_attack, dtype=torch.float).to(device)\n","X_test_attack = X_test_attack.unsqueeze(1)\n","\n"],"metadata":{"id":"GhkzoAu0Mb66"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Compute Reconstruction Errors for anomaly Data\n","\n","with torch.no_grad():\n","  # n = len(X_test_attack)\n","  reconstructed_attack = new_model(X_test_attack).to(device)\n","  # attack_loss = torch.sum((X_test_attack - reconstructed_attack) ** 2, dim=1)\n","  attack_loss = (torch.sum(abs(X_test_attack - reconstructed_attack) ** 2, dim=1)) / len(X_test_attack)\n","\n","attack_loss_np = attack_loss.cpu().numpy()  # Convert to numpy array\n","attack_loss_np = attack_loss_np.reshape(-1)\n","print(\"Reconstruction attack error: \", attack_loss_np)\n","print(\"Reconstruction attack error percentile: \", np.percentile(attack_loss.cpu(), [0, 25, 50, 75, 90, 95, 99]))\n","print(\"Size of attack loss: \", attack_loss_np.size)"],"metadata":{"id":"sfz6U4plMc0L","executionInfo":{"status":"ok","timestamp":1718140036613,"user_tz":300,"elapsed":3902,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"1f1f6cf1-0af4-4418-ac81-aa35a5a43d4a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Reconstruction attack error:  [1.1372659e-10 1.7974096e-09 3.0002194e-09 ... 4.9010104e-08 6.0190921e-08\n"," 9.2180812e-08]\n","Reconstruction attack error percentile:  [0.00000000e+00 2.14221862e-09 5.85973048e-09 4.31416893e-08\n"," 9.33964293e-06 4.52038694e-05 1.78702906e-01]\n","Size of attack loss:  1747638\n"]}]},{"cell_type":"code","source":["print(format(np.percentile(attack_loss_np, [99])))"],"metadata":{"id":"gGoDCFtlMf_C","executionInfo":{"status":"ok","timestamp":1718140036613,"user_tz":300,"elapsed":3,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"697c9e47-f496-4c38-fefc-861c4f81a4bb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.17870291]\n"]}]},{"cell_type":"code","source":["loss_df = pd.DataFrame()\n","loss_df['Class'] = [0] * len(normal_loss_np) + [1] * len(attack_loss_np)\n","loss_df['MSELoss'] = np.hstack([normal_loss_np, attack_loss_np])\n","loss_df = loss_df.sample(frac=1.0).reset_index(drop=True)\n","\n","markers = ['o', '^']\n","markers = ['o', '^']\n","colors = ['blue', 'red']\n","labels = ['Normal', 'Attack']\n","\n","plt.figure(figsize=(30, 6))\n","plt.subplot(121)\n","for flag in [1, 0]:\n","    temp = loss_df[loss_df['Class'] == flag]\n","    plt.scatter(temp.index,\n","                temp['MSELoss'],\n","                alpha=0.7,\n","                marker=markers[flag],\n","                c=colors[flag],\n","                label=labels[flag])\n","plt.axhline(y=np.percentile(normal_loss_np, [99]), color='orange', linewidth=3, linestyle='--', label='99th Percentile')\n","plt.axhline(y=np.percentile(normal_loss_np, [95]), color='g', linewidth=3, linestyle='--', label='95th Percentile')\n","plt.axhline(y=np.percentile(normal_loss_np, [92]), color='r', linewidth=3, linestyle='--', label='92th Percentile')\n","plt.axhline(y=np.percentile(normal_loss_np, [90]), color='y', linewidth=3, linestyle='--', label='90th Percentile')\n","\n","plt.ylim(0, 0.00005)\n","plt.legend(loc=[1, 0], fontsize=12)\n","plt.title('Reconstruction MSE Loss')\n","plt.ylabel('Reconstruction MSE Loss')\n","plt.xlabel('Index')"],"metadata":{"id":"if4hkoY9Mh29","executionInfo":{"status":"ok","timestamp":1718140044961,"user_tz":300,"elapsed":8350,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/","height":554},"outputId":"f62753f3-d24d-49b9-c303-99aef2f480ce"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'Index')"]},"metadata":{},"execution_count":126},{"output_type":"display_data","data":{"text/plain":["<Figure size 3000x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABRQAAAIjCAYAAAByPpdzAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOydeZiU1ZX/v1XVXVW90NCs3YBsDdKAqOCOuMUlMcYsE02MGmNM4mSCmphgMpn5jRqTaAyYGAGXZBTXjBk1yWgSE5c0ooIrKNCAQANCAw2977W/vz+Oh3vrrfetequ6qqsaz+d56qnuqrfe967nnnvuuee6DMMwIAiCIAiCIAiCIAiCIAiC4AB3vhMgCIIgCIIgCIIgCIIgCMLQQQyKgiAIgiAIgiAIgiAIgiA4RgyKgiAIgiAIgiAIgiAIgiA4RgyKgiAIgiAIgiAIgiAIgiA4RgyKgiAIgiAIgiAIgiAIgiA4RgyKgiAIgiAIgiAIgiAIgiA4RgyKgiAIgiAIgiAIgiAIgiA4RgyKgiAIgiAIgiAIgiAIgiA4RgyKgiAIgiAIgiAIgiAIgiA4RgyKgiAIgiB8LFi1ahVcLhdWrVqV76QIgiAIgiAIwpBGDIqCIAiCkEMefvhhuFyuw6+ioiJMmDABV199Nfbt25fv5GWde++9Fw8//PDHPg1mzj77bLhcLsyYMcPy+xdffPFwG3n66afjvtu4cSMuueQSTJ48GX6/HxMmTMD555+PZcuWxV03ZcqUuLamvz71qU8lTR8bW83PFgRBEARBEAQrivKdAEEQBEH4OHDbbbdh6tSpCAQCeOONN/Dwww/jtddew6ZNm+D3+/OdvKxx7733YvTo0bj66qsLLg1nnnkm+vv74fV685Iuv9+PHTt24K233sLJJ58c990TTzwBv9+PQCAQ9/maNWtwzjnnYNKkSfjWt76Fqqoq7N27F2+88QZ+85vf4Prrr4+7/vjjj8cPfvCDhGePHz8++xkSBEEQBEEQPraIQVEQBEEQBoELL7wQJ554IgDgm9/8JkaPHo0777wTzz77LL70pS/lOXX5obe3F2VlZYP2PLfbnVfjbU1NDSKRCP7nf/4nzqAYCATwpz/9CRdddBGeeeaZuN/8/Oc/x/Dhw/H2229jxIgRcd8dOnQo4RkTJkzAlVdemZP0C4IgCIIgCAIjW54FQRAEIQ+cccYZAICGhoa4z7du3YpLLrkEI0eOhN/vx4knnohnn3024fcdHR248cYbMWXKFPh8PkycOBFXXXUVWlpaDl9z6NAhfOMb38C4cePg9/tx3HHH4ZFHHom7z+7du+FyubB06VL89re/RU1NDXw+H0466SS8/fbbcdc2NTXh61//OiZOnAifz4fq6mp87nOfw+7duwHQltv6+nq88sorh7fann322QDU1u9XXnkF3/nOdzB27FhMnDgRAHD11VdjypQpCXm89dZb4XK5Ej5//PHHcfLJJ6O0tBSVlZU488wz8cILL6RMg10MxaeeegonnHACSkpKMHr0aFx55ZUJ29GvvvpqlJeXY9++ffj85z+P8vJyjBkzBosXL0Y0Gk1Iox1f+cpX8Ic//AGxWOzwZ8899xz6+vosDcsNDQ2YM2dOgjERAMaOHev4udli586duPTSSzFy5EiUlpbi1FNPxV//+teE65YtW4Y5c+YcrqMTTzwRv//97w9/393dje9973uH2+/YsWNx/vnnY926dYOZHUEQBEEQBCFDxENREARBEPIAG+EqKysPf1ZfX4/TTz8dEyZMwL//+7+jrKwM//u//4vPf/7zeOaZZ/CFL3wBANDT04MzzjgDW7ZswTXXXIP58+ejpaUFzz77LBobGzF69Gj09/fj7LPPxo4dO3Dddddh6tSpeOqpp3D11Vejo6MD3/3ud+PS8/vf/x7d3d3413/9V7hcLvzyl7/Ev/zLv2Dnzp0oLi4GAHzxi19EfX09rr/+ekyZMgWHDh3Ciy++iD179mDKlCm4++67cf3116O8vBz/+Z//CQAYN25c3HO+853vYMyYMbj55pvR29ubdrn95Cc/wa233ooFCxbgtttug9frxZtvvol//vOfuOCCCxylQefhhx/G17/+dZx00km44447cPDgQfzmN7/B66+/jvXr18cZ8qLRKD75yU/ilFNOwdKlS/HSSy/hrrvuQk1NDf7t3/7NUfovv/xy3HrrrVi1ahU+8YlPAKCyP/fccy0NhJMnT8batWuxadMmHHPMMSnvHw6H44zKTFlZGUpKShyl0Y6DBw9iwYIF6Ovrww033IBRo0bhkUcewWc/+1k8/fTTh9vn7373O9xwww245JJL8N3vfheBQAAbNmzAm2++icsvvxwA8O1vfxtPP/00rrvuOsyePRutra147bXXsGXL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kQiWLVuG8vJynHXWWWmlt6+vL84YBJCBb9iwYQgGg4c/KysrszQOJqOmpgadnZ3YsGHD4c8OHDiQkL/Pf/7zcLvduO222xIMpbonpdM0nHjiiRg7dizuv//+uDw8//zz2LJlCy666KK08pEOl1xyCW655Rbce++98Hq9ttfV1dXF5Y3529/+BsB6u3au+PSnP4233noLa9euPfxZb28vfvvb32LKlCmHt6K3trbG/c7r9WL27NkwDAPhcBjRaBSdnZ1x14wdOxbjx4+PqwdBEARBEAShcCnKdwIGgz179hxeIR8/fjwA2lL297//HStXrsTtt9+e9j1POeUUPPzww5g5cyYOHDiAn/zkJzjjjDOwadOmpHGQBEEQBIG56aabcOmll+Lhhx/Gt7/9baxYsQILFy7E3Llz8a1vfQvTpk3DwYMHsXbtWjQ2NuL9998//Lunn34al156Ka655hqccMIJaGtrw7PPPov7778fxx13HK699lo88MADuPrqq/Huu+9iypQpePrpp/H666/j7rvvTnus2rZtG84991x86UtfwuzZs1FUVIQ//elPOHjwIC677LLD151wwgm477778LOf/QzTp0/H2LFj8YlPfCLpvS+77DL86Ec/whe+8AXccMMN6Ovrw3333Yejjz4a69atO3zd9OnT8Z//+Z/46U9/ijPOOAP/8i//Ap/Ph7fffhvjx4/HHXfckVYaiouLceedd+LrX/86zjrrLHzlK1/BwYMH8Zvf/AZTpkzBjTfemFYZpcPw4cNx6623przu+uuvR19fH77whS+gtrYWoVAIa9aswR/+8AdMmTIFX//61+Ou37dvHx5//PGE+5SXl+Pzn/98yuc988wzhz0Odb72ta/h3//93/E///M/uPDCC3HDDTdg5MiReOSRR7Br1y4888wzh+N1XnDBBaiqqsLpp5+OcePGYcuWLVi+fDkuuugiDBs2DB0dHZg4cSIuueQSHHfccSgvL8dLL72Et99+O87bVRAEQRAEQShg8nnEdK4AYPzpT386/P9f/vIXA4BRVlYW9yoqKjK+9KUvGYZhGFu2bDEAJH396Ec/sn1me3u7UVFRYfz3f/93rrMnCIIgDCFWrlxpADDefvvthO+i0ahRU1Nj1NTUGJFIxDAMw2hoaDCuuuoqo6qqyiguLjYmTJhgfOYznzGefvrpuN+2trYa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t7WV4qEuWuSwbejJcPJCjkMmIFmhNt5v3kyW6GPHgHvvTV73okiBpJ980rzno0HOq2YTdkPbzkFsSdKVDWlk8BsNwPEBUks9HnJY93iorUky1nEhPbLByfI2E5yYuOrVV4E33ojrF04oE+OYtv/000/j2muvRVFREf75n/8ZP/3pT/HWW2/hU5/6FGpra3Hbbbdh/fr1+MEPfoDKykoAQGVlJR599FHceuutKCsrw1133QUAmDx5MgDgwIED+J//+R9cd911mDlzJk6cOIGf/exnuOyyy7B3715MmzYNABCLxXDNNdfglVdewT/90z/h9ttvR09PD1566SXs2bNH1aAYi8WwfPly/Nd//Reef/55XH311RbVFKPZoPjcc89hy5Yt+MIXvoA9e/ZgwYIFiEajeO+994atz4xG0ni/NfSfj7o//DNa3owg7C3JenuYFENr9Wq6bDAYNyZK28/mzKE5qxkTPK8Yw6qiX2C17xq0hqdjCoIo8YURinnR1hJBYJ6IlSs96tezy1CTSrGrr6fJTUUFWb2sHnBzfMuVvL22ttIjl7ya2tocGAePV3hzAyca6p04AUmFwqilJ36vJd4Y2eDE9iHHIROQrFAb77dvB959l/5OVfevvALceWc81qfRz0eDnG9408db+x2ELVlzTUJanBkcpPh6hw/TDiNBiOdJmjqVdHery2WKAd3p8lYvGhxJLL/PWIwcJ44coQmg3JXXrjIxjmn777zzDvbt24fHHnsMALB48WJMnz4dTz/9ND71qU9h1qxZuPTSS7F+/XpceeWVuFy2KP7FL34R//f//l9MmDABS5cuTTjv/PnzsX//fnhlguLrX/865s6diyeeeAI//OEPAQBbtmzBK6+8gocffjhhB+z3vvc9iCoJ26LRKJYuXYoXXngBL7zwAj772c8aWR1MGjSL/aNHj+KCCy4AAJx77rnw+/34zne+w8bETEiROa3hlqewumwjdpUuxtjJ/nhGuqHtYQ0NmV1SiqE1axbQ3U3KVDQKlJdThs9AwMQELdu3o+bof2Nd5ZNYWH4AndFROBSajE7vOFR7GrHuq7vUlW0jsywbnTXSruDFdl/fImwJTJ0pnLzHXSSTBU7LcmhWhlozUSTTSLnlEPR5OJwifq6TcFr7kJMLiULUxvvSUnK92rcvdVIiaddAezspMsmeTzZ6QBo53/D4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xx387Gc/45577uHll18mGAxy9tlnk06n36nHcijCwbb1ypUrueSSS3jmmWd48cUXGTduHB/60IfYs2fPgOvOOeccWltb8/89+OCD78TjOOyHg21vgHA4PKAtd+zYMeC8M7aPTg62rf/yl78MaOcNGzagaRoXXnjhgOucsX30kUgkmDdvHitWrDig61taWjjvvPM444wzeP311/nqV7/K5z//+QFKppHICod3hoNt71WrVnHWWWfxf//3f6xZs4YzzjiD888/n3Xr1g24rqGhYcDYfv7559+O6jscBAfb1jabNm0a0JajRo3Kn3PG9tHLwbb3T3/60wHtvGvXLioqKoZ8t52xffTx7LPPcs011/DSSy/xxBNPkMvl+NCHPkQikRj2N85628HhbUY4HDYWLFggrrnmmvzfhmGI0aNHi1tvvbXo9RdddJE477zzBhw78cQTxZVXXimEEMI0TVFbWyvuvPPO/Pm+vj7h9XrFgw8++DY8gcOBcrBtPRhd10VJSYm4//7788cuu+wy8dGPfvRwV9XhMHCw7X3vvfeK0tLSYctzxvbRy6GO7R//+MeipKRExOPx/DFnbB/9AOKvf/3rPq+5/vrrRUNDw4BjF198sTj77LPzfx9q/3F4ZziQ9i7GrFmzxI033pj/e8mSJWLevHmHr2IOh50DaetnnnlGAKK3t3fYa5yx/e5gJGP7r3/9q1AURWzfvj1/zBnb7w46OjoEIJ599tlhr3HW2w4Oby+OheJhIpvNsmbNGs4888z8MVVVOfPMM3nxxReL/ubFF18ccD3A2Wefnb++paWFtra2AdeUlpZy4oknDlumw9vPSNp6MMlkklwuR0VFxYDjK1euZNSoUUyfPp2rr76a7u7uw1p3h4NnpO0dj8eZMGEC48aN46Mf/SiNjY35c87YPjo5HGP7N7/5DZ/85CcJBoMDjjtj+93P/r7Zh6P/OBy9mKZJLBYb8t3esmULo0ePZvLkyXz6059m586dR6iGDofKMcccQ11dHWeddRYvvPBC/rgztt/b/OY3v+HMM89kwoQJA447Y/voJxKJAAyRy/1x1tsODm8vjkLxMNHV1YVhGNTU1Aw4XlNTMyQGi01bW9s+r7f/PZgyHd5+RtLWg/nmN7/J6NGjB3y8zjnnHH73u9/x1FNPcfvtt/Pss89y7rnnYhjGYa2/w8ExkvaePn06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\n"},"metadata":{}}]},{"cell_type":"code","source":["# Plotting histograms of reconstruction errors\n","plt.figure(figsize=(20, 6))\n","plt.hist(normal_loss_np, bins=100, alpha=0.5, range=[0, 0.00001], histtype='stepfilled', density=True, label='Normal Data')\n","plt.hist(attack_loss_np, bins=100, alpha=0.5, range=[0, 0.00001], histtype='stepfilled', density=True, label='Attack Data')\n","plt.axvline(x=np.percentile(normal_loss_np, [99]), color='orange', linewidth=3, linestyle='--', label='99% Percentile')\n","plt.axvline(x=np.percentile(normal_loss_np, [95]), color='g', linewidth=3, linestyle='--', label='95% Percentile')\n","plt.axvline(x=np.percentile(normal_loss_np, [92]), color='r', linewidth=3, linestyle='--', label='92% Percentile')\n","plt.axvline(x=np.percentile(normal_loss_np, [90]), color='y', linewidth=3, linestyle='--', label='90% Percentile')\n","plt.xlabel('Reconstruction Error')\n","plt.ylabel('Frequency')\n","plt.title('Distribution of Reconstruction Errors')\n","plt.legend()\n","plt.show()\n","\n","# Using Percentiles to determine threshold\n","percentiles = [90, 95, 99]\n","for p in percentiles:\n","    threshold = np.percentile(normal_loss_np, p)\n","    print(f\"Threshold at {p}th percentile: {threshold:}\")\n","\n","# Additional statistical analysis (Optional)\n","mean_normal = np.mean(normal_loss_np)\n","std_normal = np.std(normal_loss_np)\n","print(f\"Mean Reconstruction Error for Normal Data: {mean_normal:}\")\n","print(f\"Standard Deviation for Normal Data: {std_normal:}\")"],"metadata":{"id":"UNWcpETrMjxK","executionInfo":{"status":"ok","timestamp":1718140045332,"user_tz":300,"elapsed":374,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/","height":524},"outputId":"d43ded16-4533-49e2-fd58-a9973879e3af"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Threshold at 90th percentile: 2.1203511550993443e-07\n","Threshold at 95th percentile: 3.9229458792533473e-07\n","Threshold at 99th percentile: 1.2077453925485303e-06\n","Mean Reconstruction Error for Normal Data: 1.662094746279763e-07\n","Standard Deviation for Normal Data: 1.680564855632838e-05\n"]}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, confusion_matrix\n","\n","# Define the threshold as the 95th percentile of normal reconstruction errors\n","threshold = np.percentile(normal_loss_np, 92) #Threshold for classification\n","print(\"threshold:\", threshold)\n","\n","# Classify as attack if reconstruction error exceeds the threshold\n","\n","# y_pred_test = torch.sum((X_test - reconstructed_normal) ** 2, axis=1) > threshold\n","# y_pred_anomalous = torch.sum((X_test_attack - reconstructed_attack) ** 2, axis=1) > threshold\n","# y_pred_test = (X_test-reconstructed).pow(2).sum(1) > threshold\n","# y_pred_anomalous = (X_test_attack - reconstructed_attack).pow(2).sum(1) > threshold\n","y_pred_test = (torch.sum(abs(X_test - reconstructed) ** 2, dim=1) / len(X_test)) > threshold\n","y_pred_anomalous = (torch.sum(abs(X_test_attack - reconstructed_attack)**2, dim=1) / len(X_test_attack)) > threshold\n","\n","y_pred_test = y_pred_test.cpu()\n","y_pred_anomalous = y_pred_anomalous.cpu()\n","\n","# True labels: 0 for normal, 1 for attack\n","y_true_test = np.zeros(len(y_pred_test))\n","y_true_anomalous = np.ones(len(y_pred_anomalous))\n","\n","# Combine predictions and true labels\n","y_pred_combined = np.concatenate([y_pred_test.numpy(), y_pred_anomalous.numpy()])\n","y_true_combined = np.concatenate([y_true_test, y_true_anomalous])\n","\n","# Calculate accuracy\n","accuracy = accuracy_score(y_true_combined, y_pred_combined)\n","\n","# Calculate confusion matrix\n","conf_matrix = confusion_matrix(y_true_combined, y_pred_combined)\n","\n","print(f\"Accuracy: {accuracy:.4f}\")\n","print(\"Confusion Matrix:\")\n","print(conf_matrix)\n"],"metadata":{"id":"hjlpzgppMnv0","executionInfo":{"status":"error","timestamp":1718140045525,"user_tz":300,"elapsed":196,"user":{"displayName":"aryan shah","userId":"05390012091293986538"}},"colab":{"base_uri":"https://localhost:8080/","height":373},"outputId":"41a46e79-314d-469b-cbf7-8d0884339737"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["threshold: 2.842519961632206e-07\n"]},{"output_type":"error","ename":"ValueError","evalue":"Classification metrics can't handle a mix of binary and multilabel-indicator targets","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-128-3d4146a5896a>\u001b[0m in \u001b[0;36m<cell line: 28>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     26\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m \u001b[0;31m# Calculate accuracy\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 28\u001b[0;31m \u001b[0maccuracy\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maccuracy_score\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true_combined\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred_combined\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     29\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     30\u001b[0m \u001b[0;31m# Calculate confusion matrix\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/utils/_param_validation.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    190\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    191\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 192\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    193\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mInvalidParameterError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    194\u001b[0m                 \u001b[0;31m# When the function is just a wrapper around an estimator, we allow\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36maccuracy_score\u001b[0;34m(y_true, y_pred, normalize, sample_weight)\u001b[0m\n\u001b[1;32m    219\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    220\u001b[0m     \u001b[0;31m# Compute accuracy for each possible representation\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 221\u001b[0;31m     \u001b[0my_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_check_targets\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    222\u001b[0m     \u001b[0mcheck_consistent_length\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msample_weight\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    223\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0my_type\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstartswith\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"multilabel\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36m_check_targets\u001b[0;34m(y_true, y_pred)\u001b[0m\n\u001b[1;32m     93\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     94\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_type\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 95\u001b[0;31m         raise ValueError(\n\u001b[0m\u001b[1;32m     96\u001b[0m             \"Classification metrics can't handle a mix of {0} and {1} targets\".format(\n\u001b[1;32m     97\u001b[0m                 \u001b[0mtype_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtype_pred\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Classification metrics can't handle a mix of binary and multilabel-indicator targets"]}]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","\n","target_names = ['Normal', 'Attack']\n","print(classification_report(y_true_combined, y_pred_combined, target_names=target_names, digits=4))\n","print(confusion_matrix(y_true_combined, y_pred_combined))"],"metadata":{"id":"taVHRM_MMqBj"},"execution_count":null,"outputs":[]}]}